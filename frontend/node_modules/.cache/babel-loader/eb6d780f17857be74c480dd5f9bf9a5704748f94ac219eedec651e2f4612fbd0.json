{"ast":null,"code":"var _jsxFileName = \"E:\\\\Visual Studio Code\\\\WhaleCorpProject\\\\frontend\\\\src\\\\components\\\\Streamings.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\n\n// Canales (puedes también pasarlos por props si prefieres)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CHANNELS = [\"https://www.twitch.tv/trickmasteh\", \"https://www.twitch.tv/blawbberto\", \"https://www.twitch.tv/kaosniight\", \"https://www.twitch.tv/khangsoofly\", \"https://www.twitch.tv/faaaxy\", \"https://www.twitch.tv/takeshijoga\"];\n\n/**\r\n * Renderiza SOLO las tarjetas de canales que están LIVE.\r\n * Si todos están offline, no muestra ninguna tarjeta (pero el cuadro/título\r\n * lo maneja HomePage, así que la columna se ve igual que en tu imagen).\r\n */\nexport default function Streamings({\n  channels = CHANNELS,\n  pollIntervalMs = 60000,\n  maxCards = 12\n}) {\n  _s();\n  const [liveList, setLiveList] = useState([]); // [{channel, thumbUrl}]\n  const [loading, setLoading] = useState(true);\n  const timerRef = useRef(null);\n  const normalizedChannels = useMemo(() => (channels || []).map(raw => {\n    if (!raw) return null;\n    const s = String(raw).trim();\n    try {\n      if (s.startsWith(\"http\")) {\n        var _parts$;\n        const u = new URL(s);\n        const parts = u.pathname.split(\"/\").filter(Boolean);\n        return ((_parts$ = parts[0]) === null || _parts$ === void 0 ? void 0 : _parts$.toLowerCase()) || null;\n      }\n    } catch {}\n    return s.replace(/^@/, \"\").replace(/\\s+/g, \"\").toLowerCase();\n  }).filter(Boolean).slice(0, maxCards), [channels, maxCards]);\n  const checkLive = async () => {\n    setLoading(true);\n    const checks = normalizedChannels.map(ch => new Promise(resolve => {\n      const img = new Image();\n      const base = `https://static-cdn.jtvnw.net/previews-ttv/live_user_${encodeURIComponent(ch)}`;\n      const candidates = [`${base}-320x180.jpg?cb=${Date.now()}`, `${base}-440x248.jpg?cb=${Date.now()}`];\n      let done = false;\n      const tryNext = idx => {\n        if (idx >= candidates.length) {\n          if (!done) resolve({\n            channel: ch,\n            ok: false\n          });\n          return;\n        }\n        img.onload = () => {\n          if (!done) {\n            done = true;\n            resolve({\n              channel: ch,\n              ok: true,\n              url: candidates[idx]\n            });\n          }\n        };\n        img.onerror = () => tryNext(idx + 1);\n        img.src = candidates[idx];\n      };\n      tryNext(0);\n\n      // timeout de seguridad\n      setTimeout(() => {\n        if (!done) resolve({\n          channel: ch,\n          ok: false\n        });\n      }, 5000);\n    }));\n    const results = await Promise.all(checks);\n    const lives = results.filter(r => r.ok).map(r => ({\n      channel: r.channel,\n      thumbUrl: r.url\n    }));\n    setLiveList(lives);\n    setLoading(false);\n  };\n  useEffect(() => {\n    if (!normalizedChannels.length) {\n      setLiveList([]);\n      setLoading(false);\n      return;\n    }\n    checkLive();\n    timerRef.current = setInterval(checkLive, pollIntervalMs);\n    return () => clearInterval(timerRef.current);\n  }, [normalizedChannels, pollIntervalMs]);\n\n  // SOLO tarjetas LIVE (misma estética que tu captura)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: 16\n    },\n    children: loading && liveList.length === 0 ?\n    /*#__PURE__*/\n    // placeholder opcional mientras carga (puedes quitarlo)\n    _jsxDEV(\"div\", {\n      style: styles.skeletonBox,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.livePillMuted,\n        children: \"Buscando LIVE\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this) : liveList.map(s => /*#__PURE__*/_jsxDEV(\"a\", {\n      href: `https://www.twitch.tv/${encodeURIComponent(s.channel)}`,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      style: {\n        textDecoration: \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.card,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.livePill,\n          children: \"LIVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: s.thumbUrl,\n          alt: `${s.channel} live preview`,\n          style: {\n            width: \"100%\",\n            height: 100,\n            objectFit: \"cover\",\n            display: \"block\",\n            background: \"#555\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.meta,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.streamTitle,\n            children: s.channel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.streamSub,\n            children: \"Click para abrir en Twitch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this)\n    }, s.channel, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(Streamings, \"taalf9s3G8Vo28xWE+iLyacM+6A=\");\n_c = Streamings;\nconst styles = {\n  card: {\n    position: \"relative\",\n    border: \"3px solid #000\",\n    borderRadius: 10,\n    background: \"#f7f9fc\",\n    overflow: \"hidden\"\n  },\n  skeletonBox: {\n    border: \"3px solid #000\",\n    borderRadius: 10,\n    background: \"#f7f9fc\",\n    height: 210,\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    gridTemplateRows: \"repeat(2, minmax(0, auto))\"\n  },\n  livePill: {\n    position: \"absolute\",\n    top: 8,\n    left: 8,\n    background: \"#ff3b30\",\n    color: \"#fff\",\n    fontSize: 12,\n    padding: \"2px 8px\",\n    borderRadius: 999,\n    fontWeight: 700,\n    letterSpacing: 0.5,\n    zIndex: 2\n  },\n  livePillMuted: {\n    margin: 8,\n    background: \"#e0e0e0\",\n    color: \"#555\",\n    fontSize: 12,\n    padding: \"2px 8px\",\n    borderRadius: 999,\n    fontWeight: 600,\n    letterSpacing: 0.5\n  },\n  meta: {\n    padding: \"10px 12px 12px\"\n  },\n  streamTitle: {\n    fontWeight: 700,\n    color: \"#1e2a38\",\n    marginBottom: 4,\n    textTransform: \"capitalize\"\n  },\n  streamSub: {\n    fontSize: 12,\n    color: \"#66788a\"\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Streamings\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","jsxDEV","_jsxDEV","CHANNELS","Streamings","channels","pollIntervalMs","maxCards","_s","liveList","setLiveList","loading","setLoading","timerRef","normalizedChannels","map","raw","s","String","trim","startsWith","_parts$","u","URL","parts","pathname","split","filter","Boolean","toLowerCase","replace","slice","checkLive","checks","ch","Promise","resolve","img","Image","base","encodeURIComponent","candidates","Date","now","done","tryNext","idx","length","channel","ok","onload","url","onerror","src","setTimeout","results","all","lives","r","thumbUrl","current","setInterval","clearInterval","style","display","flexDirection","gap","children","styles","skeletonBox","livePillMuted","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","textDecoration","card","livePill","alt","width","height","objectFit","background","meta","streamTitle","streamSub","_c","position","border","borderRadius","overflow","alignItems","gridTemplateRows","top","left","color","fontSize","padding","fontWeight","letterSpacing","zIndex","margin","marginBottom","textTransform","$RefreshReg$"],"sources":["E:/Visual Studio Code/WhaleCorpProject/frontend/src/components/Streamings.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\n\r\n// Canales (puedes también pasarlos por props si prefieres)\r\nconst CHANNELS = [\r\n  \"https://www.twitch.tv/trickmasteh\",\r\n  \"https://www.twitch.tv/blawbberto\",\r\n  \"https://www.twitch.tv/kaosniight\",\r\n  \"https://www.twitch.tv/khangsoofly\",\r\n  \"https://www.twitch.tv/faaaxy\",\r\n  \"https://www.twitch.tv/takeshijoga\",\r\n];\r\n\r\n/**\r\n * Renderiza SOLO las tarjetas de canales que están LIVE.\r\n * Si todos están offline, no muestra ninguna tarjeta (pero el cuadro/título\r\n * lo maneja HomePage, así que la columna se ve igual que en tu imagen).\r\n */\r\nexport default function Streamings({\r\n  channels = CHANNELS,\r\n  pollIntervalMs = 60000,\r\n  maxCards = 12,\r\n}) {\r\n  const [liveList, setLiveList] = useState([]); // [{channel, thumbUrl}]\r\n  const [loading, setLoading] = useState(true);\r\n  const timerRef = useRef(null);\r\n\r\n  const normalizedChannels = useMemo(\r\n    () =>\r\n      (channels || [])\r\n        .map((raw) => {\r\n          if (!raw) return null;\r\n          const s = String(raw).trim();\r\n          try {\r\n            if (s.startsWith(\"http\")) {\r\n              const u = new URL(s);\r\n              const parts = u.pathname.split(\"/\").filter(Boolean);\r\n              return parts[0]?.toLowerCase() || null;\r\n            }\r\n          } catch {}\r\n          return s.replace(/^@/, \"\").replace(/\\s+/g, \"\").toLowerCase();\r\n        })\r\n        .filter(Boolean)\r\n        .slice(0, maxCards),\r\n    [channels, maxCards]\r\n  );\r\n\r\n  const checkLive = async () => {\r\n    setLoading(true);\r\n\r\n    const checks = normalizedChannels.map(\r\n      (ch) =>\r\n        new Promise((resolve) => {\r\n          const img = new Image();\r\n          const base = `https://static-cdn.jtvnw.net/previews-ttv/live_user_${encodeURIComponent(\r\n            ch\r\n          )}`;\r\n          const candidates = [\r\n            `${base}-320x180.jpg?cb=${Date.now()}`,\r\n            `${base}-440x248.jpg?cb=${Date.now()}`,\r\n          ];\r\n\r\n          let done = false;\r\n          const tryNext = (idx) => {\r\n            if (idx >= candidates.length) {\r\n              if (!done) resolve({ channel: ch, ok: false });\r\n              return;\r\n            }\r\n            img.onload = () => {\r\n              if (!done) {\r\n                done = true;\r\n                resolve({ channel: ch, ok: true, url: candidates[idx] });\r\n              }\r\n            };\r\n            img.onerror = () => tryNext(idx + 1);\r\n            img.src = candidates[idx];\r\n          };\r\n          tryNext(0);\r\n\r\n          // timeout de seguridad\r\n          setTimeout(() => {\r\n            if (!done) resolve({ channel: ch, ok: false });\r\n          }, 5000);\r\n        })\r\n    );\r\n\r\n    const results = await Promise.all(checks);\r\n    const lives = results\r\n      .filter((r) => r.ok)\r\n      .map((r) => ({ channel: r.channel, thumbUrl: r.url }));\r\n\r\n    setLiveList(lives);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!normalizedChannels.length) {\r\n      setLiveList([]);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    checkLive();\r\n    timerRef.current = setInterval(checkLive, pollIntervalMs);\r\n    return () => clearInterval(timerRef.current);\r\n  }, [normalizedChannels, pollIntervalMs]);\r\n\r\n  // SOLO tarjetas LIVE (misma estética que tu captura)\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\", gap: 16,  }}>\r\n      {loading && liveList.length === 0 ? (\r\n        // placeholder opcional mientras carga (puedes quitarlo)\r\n        <div style={styles.skeletonBox}>\r\n          <div style={styles.livePillMuted}>Buscando LIVE…</div>\r\n        </div>\r\n      ) : (\r\n        liveList.map((s) => (\r\n          <a\r\n            key={s.channel}\r\n            href={`https://www.twitch.tv/${encodeURIComponent(s.channel)}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <div style={styles.card}>\r\n              <div style={styles.livePill}>LIVE</div>\r\n              <img\r\n                src={s.thumbUrl}\r\n                alt={`${s.channel} live preview`}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: 100,\r\n                  objectFit: \"cover\",\r\n                  display: \"block\",\r\n                  background: \"#555\",\r\n                }}\r\n              />\r\n              <div style={styles.meta}>\r\n                <div style={styles.streamTitle}>{s.channel}</div>\r\n                <div style={styles.streamSub}>Click para abrir en Twitch</div>\r\n              </div>\r\n            </div>\r\n          </a>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  card: {\r\n    position: \"relative\",\r\n    border: \"3px solid #000\",\r\n    borderRadius: 10,\r\n    background: \"#f7f9fc\",\r\n    overflow: \"hidden\",\r\n  },\r\n  skeletonBox: {\r\n    border: \"3px solid #000\",\r\n    borderRadius: 10,\r\n    background: \"#f7f9fc\",\r\n    height: 210,\r\n    display: \"flex\",\r\n    alignItems: \"flex-start\",\r\n    \r\n                  gridTemplateRows: \"repeat(2, minmax(0, auto))\",\r\n  },\r\n  livePill: {\r\n    position: \"absolute\",\r\n    top: 8,\r\n    left: 8,\r\n    background: \"#ff3b30\",\r\n    color: \"#fff\",\r\n    fontSize: 12,\r\n    padding: \"2px 8px\",\r\n    borderRadius: 999,\r\n    fontWeight: 700,\r\n    letterSpacing: 0.5,\r\n    zIndex: 2,\r\n  },\r\n  livePillMuted: {\r\n    margin: 8,\r\n    background: \"#e0e0e0\",\r\n    color: \"#555\",\r\n    fontSize: 12,\r\n    padding: \"2px 8px\",\r\n    borderRadius: 999,\r\n    fontWeight: 600,\r\n    letterSpacing: 0.5,\r\n  },\r\n  meta: { padding: \"10px 12px 12px\" },\r\n  streamTitle: {\r\n    fontWeight: 700,\r\n    color: \"#1e2a38\",\r\n    marginBottom: 4,\r\n    textTransform: \"capitalize\",\r\n  },\r\n  streamSub: { fontSize: 12, color: \"#66788a\" },\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}