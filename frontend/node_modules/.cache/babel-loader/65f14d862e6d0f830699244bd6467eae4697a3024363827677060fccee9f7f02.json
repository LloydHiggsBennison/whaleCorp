{"ast":null,"code":"var _jsxFileName = \"E:\\\\Visual Studio Code\\\\WhaleCorpProject\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\nimport { fetchAppData, saveData } from \"./api/backendApi\";\nimport LoginForm from \"./components/LoginForm\";\nimport UserProfile from \"./components/UserProfile\";\nimport Header from \"./components/Header\";\nimport HomePage from \"./components/HomePage\";\nimport AdminPanel from \"./components/AdminPanel\"; // Nuevo componente\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userEmail, setUserEmail] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [appData, setAppData] = useState({\n    users: {},\n    cards: [],\n    allCharacters: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Cargar todos los datos al iniciar\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const data = await fetchAppData();\n        setAppData({\n          users: data.users || {},\n          cards: data.cards || [],\n          allCharacters: getAllCharacters(data.users)\n        });\n      } catch (err) {\n        setError(\"Error al cargar datos: \" + err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadData();\n  }, []);\n\n  // Función para obtener todos los personajes de todos los usuarios\n  const getAllCharacters = users => {\n    const characters = [];\n    Object.entries(users).forEach(([email, userData]) => {\n      if (userData.characters) {\n        userData.characters.forEach(char => {\n          characters.push({\n            ...char,\n            userEmail: email\n          });\n        });\n      }\n    });\n    return characters;\n  };\n\n  // Guardar datos de usuario cuando cambian\n  useEffect(() => {\n    if (userEmail && userData) {\n      saveData(\"user\", {\n        email: userEmail,\n        data: userData\n      }).catch(console.error);\n\n      // Actualizar lista de personajes\n      setAppData(prev => ({\n        ...prev,\n        allCharacters: getAllCharacters({\n          ...prev.users,\n          [userEmail]: userData\n        })\n      }));\n    }\n  }, [userData, userEmail]);\n\n  // Guardar tarjetas\n  const saveCards = cards => {\n    saveData(\"cards\", {\n      cards\n    }).then(() => setAppData(prev => ({\n      ...prev,\n      cards\n    }))).catch(console.error);\n  };\n  const handleLogin = async (email, password, mode) => {\n    const trimmedEmail = email.trim();\n    const existingUser = appData.users[trimmedEmail];\n    if (mode === \"register\") {\n      if (existingUser) throw new Error(\"Usuario ya registrado\");\n      const newUser = {\n        password,\n        characters: [],\n        labels: [],\n        role: \"user\" // Por defecto\n      };\n      setUserEmail(trimmedEmail);\n      setUserData(newUser);\n      // Actualizar appData local\n      setAppData(prev => ({\n        ...prev,\n        users: {\n          ...prev.users,\n          [trimmedEmail]: newUser\n        }\n      }));\n    } else {\n      if (!existingUser || existingUser.password !== password) {\n        throw new Error(\"Credenciales inválidas\");\n      }\n      setUserEmail(trimmedEmail);\n      setUserData(existingUser);\n    }\n  };\n  const handleLogout = () => {\n    setUserEmail(null);\n    setUserData(null);\n  };\n\n  // Determinar rol del usuario\n  const userRole = (userData === null || userData === void 0 ? void 0 : userData.role) || \"user\";\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      userEmail: userEmail,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(HomePage, {\n          cards: appData.cards,\n          loading: loading,\n          error: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: userEmail ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: userRole === \"admin\" ? \"/admin\" : \"/profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 32\n        }, this) : /*#__PURE__*/_jsxDEV(LoginForm, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 97\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile\",\n        element: userEmail && userRole === \"user\" ? /*#__PURE__*/_jsxDEV(UserProfile, {\n          userEmail: userEmail,\n          userData: userData,\n          setUserData: setUserData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: userEmail && userRole === \"admin\" ? /*#__PURE__*/_jsxDEV(AdminPanel, {\n          cards: appData.cards,\n          allCharacters: appData.allCharacters,\n          onSaveCards: saveCards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Pw6O9xTR5bs1CH9PCtPL77pRdqk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Routes","Route","Navigate","fetchAppData","saveData","LoginForm","UserProfile","Header","HomePage","AdminPanel","jsxDEV","_jsxDEV","App","_s","userEmail","setUserEmail","userData","setUserData","appData","setAppData","users","cards","allCharacters","loading","setLoading","error","setError","loadData","data","getAllCharacters","err","message","characters","Object","entries","forEach","email","char","push","catch","console","prev","saveCards","then","handleLogin","password","mode","trimmedEmail","trim","existingUser","Error","newUser","labels","role","handleLogout","userRole","children","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","onLogin","onSaveCards","_c","$RefreshReg$"],"sources":["E:/Visual Studio Code/WhaleCorpProject/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\nimport { fetchAppData, saveData } from \"./api/backendApi\";\nimport LoginForm from \"./components/LoginForm\";\nimport UserProfile from \"./components/UserProfile\";\nimport Header from \"./components/Header\";\nimport HomePage from \"./components/HomePage\";\nimport AdminPanel from \"./components/AdminPanel\"; // Nuevo componente\n\nfunction App() {\n  const [userEmail, setUserEmail] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [appData, setAppData] = useState({ \n    users: {}, \n    cards: [],\n    allCharacters: [] \n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Cargar todos los datos al iniciar\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const data = await fetchAppData();\n        setAppData({\n          users: data.users || {},\n          cards: data.cards || [],\n          allCharacters: getAllCharacters(data.users)\n        });\n      } catch (err) {\n        setError(\"Error al cargar datos: \" + err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadData();\n  }, []);\n\n  // Función para obtener todos los personajes de todos los usuarios\n  const getAllCharacters = (users) => {\n    const characters = [];\n    Object.entries(users).forEach(([email, userData]) => {\n      if (userData.characters) {\n        userData.characters.forEach(char => {\n          characters.push({\n            ...char,\n            userEmail: email\n          });\n        });\n      }\n    });\n    return characters;\n  };\n\n  // Guardar datos de usuario cuando cambian\n  useEffect(() => {\n    if (userEmail && userData) {\n      saveData(\"user\", { email: userEmail, data: userData })\n        .catch(console.error);\n      \n      // Actualizar lista de personajes\n      setAppData(prev => ({\n        ...prev,\n        allCharacters: getAllCharacters({\n          ...prev.users,\n          [userEmail]: userData\n        })\n      }));\n    }\n  }, [userData, userEmail]);\n\n  // Guardar tarjetas\n  const saveCards = (cards) => {\n    saveData(\"cards\", { cards })\n      .then(() => setAppData(prev => ({ ...prev, cards })))\n      .catch(console.error);\n  };\n\n  const handleLogin = async (email, password, mode) => {\n    const trimmedEmail = email.trim();\n    const existingUser = appData.users[trimmedEmail];\n    \n    if (mode === \"register\") {\n      if (existingUser) throw new Error(\"Usuario ya registrado\");\n      \n      const newUser = { \n        password, \n        characters: [], \n        labels: [],\n        role: \"user\" // Por defecto\n      };\n      \n      setUserEmail(trimmedEmail);\n      setUserData(newUser);\n      // Actualizar appData local\n      setAppData(prev => ({\n        ...prev,\n        users: { ...prev.users, [trimmedEmail]: newUser }\n      }));\n    } else {\n      if (!existingUser || existingUser.password !== password) {\n        throw new Error(\"Credenciales inválidas\");\n      }\n      setUserEmail(trimmedEmail);\n      setUserData(existingUser);\n    }\n  };\n\n  const handleLogout = () => {\n    setUserEmail(null);\n    setUserData(null);\n  };\n\n  // Determinar rol del usuario\n  const userRole = userData?.role || \"user\";\n\n  return (\n    <BrowserRouter>\n      <Header userEmail={userEmail} onLogout={handleLogout} />\n      <Routes>\n        <Route path=\"/\" element={<HomePage cards={appData.cards} loading={loading} error={error} />} />\n        <Route \n          path=\"/login\" \n          element={userEmail ? <Navigate to={userRole === \"admin\" ? \"/admin\" : \"/profile\"} /> : <LoginForm onLogin={handleLogin} />} \n        />\n        <Route \n          path=\"/profile\" \n          element={\n            userEmail && userRole === \"user\" ? \n              <UserProfile \n                userEmail={userEmail} \n                userData={userData} \n                setUserData={setUserData} \n              /> : \n              <Navigate to=\"/login\" />\n          } \n        />\n        {/* Nueva ruta para admin */}\n        <Route \n          path=\"/admin\" \n          element={\n            userEmail && userRole === \"admin\" ? \n              <AdminPanel \n                cards={appData.cards}\n                allCharacters={appData.allCharacters}\n                onSaveCards={saveCards}\n              /> : \n              <Navigate to=\"/login\" />\n          } \n        />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}