{"ast":null,"code":"var _jsxFileName = \"E:\\\\Visual Studio Code\\\\WhaleCorpProject\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { fetchUsersData, saveUserData } from \"./api/backendApi\";\nimport LoginForm from \"./components/LoginForm\";\nimport UserProfile from \"./components/UserProfile\";\nimport Header from \"./components/Header\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userEmail, setUserEmail] = useState(null);\n  const [userData, setUserData] = useState({\n    characters: [],\n    labels: []\n  });\n  const [allUsersData, setAllUsersData] = useState({});\n  useEffect(() => {\n    fetchUsersData().then(data => {\n      setAllUsersData(data);\n    }).catch(console.error);\n  }, []);\n  useEffect(() => {\n    if (userEmail && userData) {\n      saveUserData(userEmail, userData).catch(console.error);\n    }\n  }, [userData, userEmail]);\n  const handleLogin = async (email, password, mode) => {\n    const existingUser = allUsersData[email];\n    if (mode === \"register\") {\n      if (existingUser) throw new Error(\"Usuario ya registrado\");\n      setUserEmail(email);\n      setUserData({\n        characters: [],\n        labels: [],\n        password\n      });\n      setAllUsersData(prev => ({\n        ...prev,\n        [email]: {\n          password,\n          characters: [],\n          labels: []\n        }\n      }));\n    } else {\n      if (!existingUser || existingUser.password !== password) throw new Error(\"Credenciales inválidas\");\n      setUserEmail(email);\n      setUserData(existingUser);\n    }\n  };\n  const handleLogout = () => {\n    setUserEmail(null);\n    // No limpiar userData para evitar sobreescribir datos en Google Sheets con vacío\n    // setUserData({ characters: [], labels: [] });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      userEmail: userEmail,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), userEmail ? /*#__PURE__*/_jsxDEV(UserProfile, {\n      userEmail: userEmail,\n      userData: userData,\n      setUserData: setUserData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(LoginForm, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"DpGn1ciOyDfFeu4/wzRCuwVVC/g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchUsersData","saveUserData","LoginForm","UserProfile","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","userEmail","setUserEmail","userData","setUserData","characters","labels","allUsersData","setAllUsersData","then","data","catch","console","error","handleLogin","email","password","mode","existingUser","Error","prev","handleLogout","children","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","$RefreshReg$"],"sources":["E:/Visual Studio Code/WhaleCorpProject/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchUsersData, saveUserData } from \"./api/backendApi\";\nimport LoginForm from \"./components/LoginForm\";\nimport UserProfile from \"./components/UserProfile\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  const [userEmail, setUserEmail] = useState(null);\n  const [userData, setUserData] = useState({ characters: [], labels: [] });\n  const [allUsersData, setAllUsersData] = useState({});\n\n  useEffect(() => {\n    fetchUsersData()\n      .then((data) => {\n        setAllUsersData(data);\n      })\n      .catch(console.error);\n  }, []);\n\n  useEffect(() => {\n    if (userEmail && userData) {\n      saveUserData(userEmail, userData).catch(console.error);\n    }\n  }, [userData, userEmail]);\n\n  const handleLogin = async (email, password, mode) => {\n    const existingUser = allUsersData[email];\n    if (mode === \"register\") {\n      if (existingUser) throw new Error(\"Usuario ya registrado\");\n      setUserEmail(email);\n      setUserData({ characters: [], labels: [], password });\n      setAllUsersData((prev) => ({ ...prev, [email]: { password, characters: [], labels: [] } }));\n    } else {\n      if (!existingUser || existingUser.password !== password) throw new Error(\"Credenciales inválidas\");\n      setUserEmail(email);\n      setUserData(existingUser);\n    }\n  };\n\n  const handleLogout = () => {\n    setUserEmail(null);\n    // No limpiar userData para evitar sobreescribir datos en Google Sheets con vacío\n    // setUserData({ characters: [], labels: [] });\n  };\n\n  return (\n    <>\n      <Header userEmail={userEmail} onLogout={handleLogout} />\n      {userEmail ? (\n        <UserProfile userEmail={userEmail} userData={userData} setUserData={setUserData} />\n      ) : (\n        <LoginForm onLogin={handleLogin} />\n      )}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}