{"ast":null,"code":"var _jsxFileName = \"E:\\\\Visual Studio Code\\\\WhaleCorpProject\\\\frontend\\\\src\\\\components\\\\Streamings.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\n\n/**\r\n * Streamings (frontend-only, SIN keys)\r\n * - Acepta canales como username (\"kaosniight\") o URL completa (\"https://www.twitch.tv/kaosniight\")\r\n * - Detecta LIVE cargando miniaturas públicas de Twitch.\r\n * - Si está LIVE, muestra tarjeta con imagen y link al canal.\r\n * - Si no hay LIVE, no renderiza nada (HomePage expande ancho).\r\n *\r\n * Props:\r\n *   channels: string[]           // usernames o URLs\r\n *   pollIntervalMs?: number      // default 60s\r\n *   maxCards?: number            // límite de tarjetas para pintar (default 12)\r\n *   onLiveChange?: (count) => {} // callback para informar cantidad de lives\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Streamings({\n  channels = [],\n  pollIntervalMs = 60000,\n  maxCards = 12,\n  onLiveChange\n}) {\n  _s();\n  const [liveList, setLiveList] = useState([]); // [{channel, thumbUrl}]\n  const [loading, setLoading] = useState(true);\n  const timerRef = useRef(null);\n  const normalizeChannels = arr => (arr || []).map(raw => {\n    if (!raw) return null;\n    const s = String(raw).trim();\n    try {\n      if (s.startsWith(\"http\")) {\n        var _parts$;\n        const u = new URL(s);\n        const parts = u.pathname.split(\"/\").filter(Boolean);\n        return ((_parts$ = parts[0]) === null || _parts$ === void 0 ? void 0 : _parts$.toLowerCase()) || null;\n      }\n    } catch (_) {}\n    return s.replace(/^@/, \"\").replace(/\\s+/g, \"\").toLowerCase();\n  }).filter(Boolean);\n  const notifyParent = n => {\n    try {\n      typeof onLiveChange === \"function\" && onLiveChange(n);\n    } catch (_) {}\n  };\n  const checkLive = async () => {\n    setLoading(true);\n    const list = normalizeChannels(channels).slice(0, maxCards);\n    const checks = list.map(ch => new Promise(resolve => {\n      const img = new Image();\n      // probamos 2 tamaños por si uno 404 y el otro no\n      const base = `https://static-cdn.jtvnw.net/previews-ttv/live_user_${encodeURIComponent(ch)}`;\n      const candidates = [`${base}-320x180.jpg?cb=${Date.now()}`, `${base}-440x248.jpg?cb=${Date.now()}`];\n      let done = false;\n      const tryNext = idx => {\n        if (idx >= candidates.length) {\n          if (!done) resolve({\n            channel: ch,\n            ok: false\n          });\n          return;\n        }\n        img.onload = () => {\n          if (!done) {\n            done = true;\n            resolve({\n              channel: ch,\n              ok: true,\n              url: candidates[idx]\n            });\n          }\n        };\n        img.onerror = () => tryNext(idx + 1);\n        img.src = candidates[idx];\n      };\n      tryNext(0);\n      setTimeout(() => {\n        if (!done) resolve({\n          channel: ch,\n          ok: false\n        });\n      }, 5000);\n    }));\n    const results = await Promise.all(checks);\n    const lives = results.filter(r => r.ok).map(r => ({\n      channel: r.channel,\n      thumbUrl: r.url\n    }));\n    setLiveList(lives);\n    notifyParent(lives.length);\n    setLoading(false);\n  };\n  useEffect(() => {\n    if (!(channels !== null && channels !== void 0 && channels.length)) {\n      setLiveList([]);\n      setLoading(false);\n      notifyParent(0);\n      return;\n    }\n    checkLive();\n    timerRef.current = setInterval(checkLive, pollIntervalMs);\n    return () => clearInterval(timerRef.current);\n  }, [JSON.stringify(channels), pollIntervalMs]);\n\n  // Si no hay nadie en vivo, no renderizamos nada (HomePage ocupando ancho completo)\n  if (!loading && liveList.length === 0) return null;\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    style: styles.sidebar,\n    children: loading && liveList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.skeletonBox,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.livePillMuted,\n        children: \"Buscando LIVE\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this) : liveList.map(s => /*#__PURE__*/_jsxDEV(\"a\", {\n      href: `https://www.twitch.tv/${encodeURIComponent(s.channel)}`,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      style: {\n        textDecoration: \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.card,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.livePill,\n          children: \"LIVE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: s.thumbUrl,\n          alt: `${s.channel} live preview`,\n          style: {\n            width: \"100%\",\n            height: 220,\n            objectFit: \"cover\",\n            display: \"block\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.meta,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.streamTitle,\n            children: s.channel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.streamSub,\n            children: \"Click para abrir en Twitch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)\n    }, s.channel, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(Streamings, \"MEhi2HdGyJn0ueWM6LBBbSusnhI=\");\n_c = Streamings;\nconst styles = {\n  sidebar: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: 16\n  },\n  card: {\n    position: \"relative\",\n    border: \"3px solid #000\",\n    borderRadius: 10,\n    background: \"#f7f9fc\",\n    overflow: \"hidden\"\n  },\n  skeletonBox: {\n    border: \"3px solid #000\",\n    borderRadius: 10,\n    background: \"#f7f9fc\",\n    height: 220,\n    display: \"flex\",\n    alignItems: \"flex-start\"\n  },\n  livePill: {\n    position: \"absolute\",\n    top: 8,\n    left: 8,\n    background: \"#ff3b30\",\n    color: \"#fff\",\n    fontSize: 12,\n    padding: \"2px 8px\",\n    borderRadius: 999,\n    fontWeight: 700,\n    letterSpacing: 0.5,\n    zIndex: 2\n  },\n  livePillMuted: {\n    margin: 8,\n    background: \"#e0e0e0\",\n    color: \"#555\",\n    fontSize: 12,\n    padding: \"2px 8px\",\n    borderRadius: 999,\n    fontWeight: 600,\n    letterSpacing: 0.5\n  },\n  meta: {\n    padding: \"10px 12px 12px\"\n  },\n  streamTitle: {\n    fontWeight: 700,\n    color: \"#1e2a38\",\n    marginBottom: 4,\n    textTransform: \"capitalize\"\n  },\n  streamSub: {\n    fontSize: 12,\n    color: \"#66788a\"\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Streamings\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Streamings","channels","pollIntervalMs","maxCards","onLiveChange","_s","liveList","setLiveList","loading","setLoading","timerRef","normalizeChannels","arr","map","raw","s","String","trim","startsWith","_parts$","u","URL","parts","pathname","split","filter","Boolean","toLowerCase","_","replace","notifyParent","n","checkLive","list","slice","checks","ch","Promise","resolve","img","Image","base","encodeURIComponent","candidates","Date","now","done","tryNext","idx","length","channel","ok","onload","url","onerror","src","setTimeout","results","all","lives","r","thumbUrl","current","setInterval","clearInterval","JSON","stringify","style","styles","sidebar","children","skeletonBox","livePillMuted","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","textDecoration","card","livePill","alt","width","height","objectFit","display","meta","streamTitle","streamSub","_c","flexDirection","gap","position","border","borderRadius","background","overflow","alignItems","top","left","color","fontSize","padding","fontWeight","letterSpacing","zIndex","margin","marginBottom","textTransform","$RefreshReg$"],"sources":["E:/Visual Studio Code/WhaleCorpProject/frontend/src/components/Streamings.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\n/**\r\n * Streamings (frontend-only, SIN keys)\r\n * - Acepta canales como username (\"kaosniight\") o URL completa (\"https://www.twitch.tv/kaosniight\")\r\n * - Detecta LIVE cargando miniaturas públicas de Twitch.\r\n * - Si está LIVE, muestra tarjeta con imagen y link al canal.\r\n * - Si no hay LIVE, no renderiza nada (HomePage expande ancho).\r\n *\r\n * Props:\r\n *   channels: string[]           // usernames o URLs\r\n *   pollIntervalMs?: number      // default 60s\r\n *   maxCards?: number            // límite de tarjetas para pintar (default 12)\r\n *   onLiveChange?: (count) => {} // callback para informar cantidad de lives\r\n */\r\nexport default function Streamings({\r\n  channels = [],\r\n  pollIntervalMs = 60000,\r\n  maxCards = 12,\r\n  onLiveChange,\r\n}) {\r\n  const [liveList, setLiveList] = useState([]); // [{channel, thumbUrl}]\r\n  const [loading, setLoading] = useState(true);\r\n  const timerRef = useRef(null);\r\n\r\n  const normalizeChannels = (arr) =>\r\n    (arr || [])\r\n      .map((raw) => {\r\n        if (!raw) return null;\r\n        const s = String(raw).trim();\r\n        try {\r\n          if (s.startsWith(\"http\")) {\r\n            const u = new URL(s);\r\n            const parts = u.pathname.split(\"/\").filter(Boolean);\r\n            return parts[0]?.toLowerCase() || null;\r\n          }\r\n        } catch (_) {}\r\n        return s.replace(/^@/, \"\").replace(/\\s+/g, \"\").toLowerCase();\r\n      })\r\n      .filter(Boolean);\r\n\r\n  const notifyParent = (n) => {\r\n    try {\r\n      typeof onLiveChange === \"function\" && onLiveChange(n);\r\n    } catch (_) {}\r\n  };\r\n\r\n  const checkLive = async () => {\r\n    setLoading(true);\r\n\r\n    const list = normalizeChannels(channels).slice(0, maxCards);\r\n\r\n    const checks = list.map(\r\n      (ch) =>\r\n        new Promise((resolve) => {\r\n          const img = new Image();\r\n          // probamos 2 tamaños por si uno 404 y el otro no\r\n          const base = `https://static-cdn.jtvnw.net/previews-ttv/live_user_${encodeURIComponent(\r\n            ch\r\n          )}`;\r\n          const candidates = [\r\n            `${base}-320x180.jpg?cb=${Date.now()}`,\r\n            `${base}-440x248.jpg?cb=${Date.now()}`,\r\n          ];\r\n\r\n          let done = false;\r\n\r\n          const tryNext = (idx) => {\r\n            if (idx >= candidates.length) {\r\n              if (!done) resolve({ channel: ch, ok: false });\r\n              return;\r\n            }\r\n            img.onload = () => {\r\n              if (!done) {\r\n                done = true;\r\n                resolve({ channel: ch, ok: true, url: candidates[idx] });\r\n              }\r\n            };\r\n            img.onerror = () => tryNext(idx + 1);\r\n            img.src = candidates[idx];\r\n          };\r\n\r\n          tryNext(0);\r\n          setTimeout(() => { if (!done) resolve({ channel: ch, ok: false }); }, 5000);\r\n        })\r\n    );\r\n\r\n    const results = await Promise.all(checks);\r\n    const lives = results\r\n      .filter((r) => r.ok)\r\n      .map((r) => ({ channel: r.channel, thumbUrl: r.url }));\r\n\r\n    setLiveList(lives);\r\n    notifyParent(lives.length);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!channels?.length) {\r\n      setLiveList([]);\r\n      setLoading(false);\r\n      notifyParent(0);\r\n      return;\r\n    }\r\n    checkLive();\r\n    timerRef.current = setInterval(checkLive, pollIntervalMs);\r\n    return () => clearInterval(timerRef.current);\r\n  }, [JSON.stringify(channels), pollIntervalMs]);\r\n\r\n  // Si no hay nadie en vivo, no renderizamos nada (HomePage ocupando ancho completo)\r\n  if (!loading && liveList.length === 0) return null;\r\n\r\n  return (\r\n    <aside style={styles.sidebar}>\r\n      {loading && liveList.length === 0 ? (\r\n        <div style={styles.skeletonBox}>\r\n          <div style={styles.livePillMuted}>Buscando LIVE…</div>\r\n        </div>\r\n      ) : (\r\n        liveList.map((s) => (\r\n          <a\r\n            key={s.channel}\r\n            href={`https://www.twitch.tv/${encodeURIComponent(s.channel)}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <div style={styles.card}>\r\n              <div style={styles.livePill}>LIVE</div>\r\n              <img\r\n                src={s.thumbUrl}\r\n                alt={`${s.channel} live preview`}\r\n                style={{ width: \"100%\", height: 220, objectFit: \"cover\", display: \"block\" }}\r\n              />\r\n              <div style={styles.meta}>\r\n                <div style={styles.streamTitle}>{s.channel}</div>\r\n                <div style={styles.streamSub}>Click para abrir en Twitch</div>\r\n              </div>\r\n            </div>\r\n          </a>\r\n        ))\r\n      )}\r\n    </aside>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  sidebar: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: 16,\r\n  },\r\n  card: {\r\n    position: \"relative\",\r\n    border: \"3px solid #000\",\r\n    borderRadius: 10,\r\n    background: \"#f7f9fc\",\r\n    overflow: \"hidden\",\r\n  },\r\n  skeletonBox: {\r\n    border: \"3px solid #000\",\r\n    borderRadius: 10,\r\n    background: \"#f7f9fc\",\r\n    height: 220,\r\n    display: \"flex\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  livePill: {\r\n    position: \"absolute\",\r\n    top: 8,\r\n    left: 8,\r\n    background: \"#ff3b30\",\r\n    color: \"#fff\",\r\n    fontSize: 12,\r\n    padding: \"2px 8px\",\r\n    borderRadius: 999,\r\n    fontWeight: 700,\r\n    letterSpacing: 0.5,\r\n    zIndex: 2,\r\n  },\r\n  livePillMuted: {\r\n    margin: 8,\r\n    background: \"#e0e0e0\",\r\n    color: \"#555\",\r\n    fontSize: 12,\r\n    padding: \"2px 8px\",\r\n    borderRadius: 999,\r\n    fontWeight: 600,\r\n    letterSpacing: 0.5,\r\n  },\r\n  meta: { padding: \"10px 12px 12px\" },\r\n  streamTitle: { fontWeight: 700, color: \"#1e2a38\", marginBottom: 4, textTransform: \"capitalize\" },\r\n  streamSub: { fontSize: 12, color: \"#66788a\" },\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,SAAAC,MAAA,IAAAC,OAAA;AAaA,eAAe,SAASC,UAAUA,CAAC;EACjCC,QAAQ,GAAG,EAAE;EACbC,cAAc,GAAG,KAAK;EACtBC,QAAQ,GAAG,EAAE;EACbC;AACF,CAAC,EAAE;EAAAC,EAAA;EACD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMa,QAAQ,GAAGd,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMe,iBAAiB,GAAIC,GAAG,IAC5B,CAACA,GAAG,IAAI,EAAE,EACPC,GAAG,CAAEC,GAAG,IAAK;IACZ,IAAI,CAACA,GAAG,EAAE,OAAO,IAAI;IACrB,MAAMC,CAAC,GAAGC,MAAM,CAACF,GAAG,CAAC,CAACG,IAAI,CAAC,CAAC;IAC5B,IAAI;MACF,IAAIF,CAAC,CAACG,UAAU,CAAC,MAAM,CAAC,EAAE;QAAA,IAAAC,OAAA;QACxB,MAAMC,CAAC,GAAG,IAAIC,GAAG,CAACN,CAAC,CAAC;QACpB,MAAMO,KAAK,GAAGF,CAAC,CAACG,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;QACnD,OAAO,EAAAP,OAAA,GAAAG,KAAK,CAAC,CAAC,CAAC,cAAAH,OAAA,uBAARA,OAAA,CAAUQ,WAAW,CAAC,CAAC,KAAI,IAAI;MACxC;IACF,CAAC,CAAC,OAAOC,CAAC,EAAE,CAAC;IACb,OAAOb,CAAC,CAACc,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAACF,WAAW,CAAC,CAAC;EAC9D,CAAC,CAAC,CACDF,MAAM,CAACC,OAAO,CAAC;EAEpB,MAAMI,YAAY,GAAIC,CAAC,IAAK;IAC1B,IAAI;MACF,OAAO3B,YAAY,KAAK,UAAU,IAAIA,YAAY,CAAC2B,CAAC,CAAC;IACvD,CAAC,CAAC,OAAOH,CAAC,EAAE,CAAC;EACf,CAAC;EAED,MAAMI,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5BvB,UAAU,CAAC,IAAI,CAAC;IAEhB,MAAMwB,IAAI,GAAGtB,iBAAiB,CAACV,QAAQ,CAAC,CAACiC,KAAK,CAAC,CAAC,EAAE/B,QAAQ,CAAC;IAE3D,MAAMgC,MAAM,GAAGF,IAAI,CAACpB,GAAG,CACpBuB,EAAE,IACD,IAAIC,OAAO,CAAEC,OAAO,IAAK;MACvB,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACvB;MACA,MAAMC,IAAI,GAAG,uDAAuDC,kBAAkB,CACpFN,EACF,CAAC,EAAE;MACH,MAAMO,UAAU,GAAG,CACjB,GAAGF,IAAI,mBAAmBG,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EACtC,GAAGJ,IAAI,mBAAmBG,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CACvC;MAED,IAAIC,IAAI,GAAG,KAAK;MAEhB,MAAMC,OAAO,GAAIC,GAAG,IAAK;QACvB,IAAIA,GAAG,IAAIL,UAAU,CAACM,MAAM,EAAE;UAC5B,IAAI,CAACH,IAAI,EAAER,OAAO,CAAC;YAAEY,OAAO,EAAEd,EAAE;YAAEe,EAAE,EAAE;UAAM,CAAC,CAAC;UAC9C;QACF;QACAZ,GAAG,CAACa,MAAM,GAAG,MAAM;UACjB,IAAI,CAACN,IAAI,EAAE;YACTA,IAAI,GAAG,IAAI;YACXR,OAAO,CAAC;cAAEY,OAAO,EAAEd,EAAE;cAAEe,EAAE,EAAE,IAAI;cAAEE,GAAG,EAAEV,UAAU,CAACK,GAAG;YAAE,CAAC,CAAC;UAC1D;QACF,CAAC;QACDT,GAAG,CAACe,OAAO,GAAG,MAAMP,OAAO,CAACC,GAAG,GAAG,CAAC,CAAC;QACpCT,GAAG,CAACgB,GAAG,GAAGZ,UAAU,CAACK,GAAG,CAAC;MAC3B,CAAC;MAEDD,OAAO,CAAC,CAAC,CAAC;MACVS,UAAU,CAAC,MAAM;QAAE,IAAI,CAACV,IAAI,EAAER,OAAO,CAAC;UAAEY,OAAO,EAAEd,EAAE;UAAEe,EAAE,EAAE;QAAM,CAAC,CAAC;MAAE,CAAC,EAAE,IAAI,CAAC;IAC7E,CAAC,CACL,CAAC;IAED,MAAMM,OAAO,GAAG,MAAMpB,OAAO,CAACqB,GAAG,CAACvB,MAAM,CAAC;IACzC,MAAMwB,KAAK,GAAGF,OAAO,CAClBhC,MAAM,CAAEmC,CAAC,IAAKA,CAAC,CAACT,EAAE,CAAC,CACnBtC,GAAG,CAAE+C,CAAC,KAAM;MAAEV,OAAO,EAAEU,CAAC,CAACV,OAAO;MAAEW,QAAQ,EAAED,CAAC,CAACP;IAAI,CAAC,CAAC,CAAC;IAExD9C,WAAW,CAACoD,KAAK,CAAC;IAClB7B,YAAY,CAAC6B,KAAK,CAACV,MAAM,CAAC;IAC1BxC,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,IAAI,EAACM,QAAQ,aAARA,QAAQ,eAARA,QAAQ,CAAEgD,MAAM,GAAE;MACrB1C,WAAW,CAAC,EAAE,CAAC;MACfE,UAAU,CAAC,KAAK,CAAC;MACjBqB,YAAY,CAAC,CAAC,CAAC;MACf;IACF;IACAE,SAAS,CAAC,CAAC;IACXtB,QAAQ,CAACoD,OAAO,GAAGC,WAAW,CAAC/B,SAAS,EAAE9B,cAAc,CAAC;IACzD,OAAO,MAAM8D,aAAa,CAACtD,QAAQ,CAACoD,OAAO,CAAC;EAC9C,CAAC,EAAE,CAACG,IAAI,CAACC,SAAS,CAACjE,QAAQ,CAAC,EAAEC,cAAc,CAAC,CAAC;;EAE9C;EACA,IAAI,CAACM,OAAO,IAAIF,QAAQ,CAAC2C,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;EAElD,oBACElD,OAAA;IAAOoE,KAAK,EAAEC,MAAM,CAACC,OAAQ;IAAAC,QAAA,EAC1B9D,OAAO,IAAIF,QAAQ,CAAC2C,MAAM,KAAK,CAAC,gBAC/BlD,OAAA;MAAKoE,KAAK,EAAEC,MAAM,CAACG,WAAY;MAAAD,QAAA,eAC7BvE,OAAA;QAAKoE,KAAK,EAAEC,MAAM,CAACI,aAAc;QAAAF,QAAA,EAAC;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,GAENtE,QAAQ,CAACO,GAAG,CAAEE,CAAC,iBACbhB,OAAA;MAEE8E,IAAI,EAAE,yBAAyBnC,kBAAkB,CAAC3B,CAAC,CAACmC,OAAO,CAAC,EAAG;MAC/D4B,MAAM,EAAC,QAAQ;MACfC,GAAG,EAAC,qBAAqB;MACzBZ,KAAK,EAAE;QAAEa,cAAc,EAAE;MAAO,CAAE;MAAAV,QAAA,eAElCvE,OAAA;QAAKoE,KAAK,EAAEC,MAAM,CAACa,IAAK;QAAAX,QAAA,gBACtBvE,OAAA;UAAKoE,KAAK,EAAEC,MAAM,CAACc,QAAS;UAAAZ,QAAA,EAAC;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvC7E,OAAA;UACEwD,GAAG,EAAExC,CAAC,CAAC8C,QAAS;UAChBsB,GAAG,EAAE,GAAGpE,CAAC,CAACmC,OAAO,eAAgB;UACjCiB,KAAK,EAAE;YAAEiB,KAAK,EAAE,MAAM;YAAEC,MAAM,EAAE,GAAG;YAAEC,SAAS,EAAE,OAAO;YAAEC,OAAO,EAAE;UAAQ;QAAE;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7E,CAAC,eACF7E,OAAA;UAAKoE,KAAK,EAAEC,MAAM,CAACoB,IAAK;UAAAlB,QAAA,gBACtBvE,OAAA;YAAKoE,KAAK,EAAEC,MAAM,CAACqB,WAAY;YAAAnB,QAAA,EAAEvD,CAAC,CAACmC;UAAO;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACjD7E,OAAA;YAAKoE,KAAK,EAAEC,MAAM,CAACsB,SAAU;YAAApB,QAAA,EAAC;UAA0B;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC,GAjBD7D,CAAC,CAACmC,OAAO;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAkBb,CACJ;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEZ;AAACvE,EAAA,CAjIuBL,UAAU;AAAA2F,EAAA,GAAV3F,UAAU;AAmIlC,MAAMoE,MAAM,GAAG;EACbC,OAAO,EAAE;IACPe,KAAK,EAAE,MAAM;IACbG,OAAO,EAAE,MAAM;IACfK,aAAa,EAAE,QAAQ;IACvBC,GAAG,EAAE;EACP,CAAC;EACDZ,IAAI,EAAE;IACJa,QAAQ,EAAE,UAAU;IACpBC,MAAM,EAAE,gBAAgB;IACxBC,YAAY,EAAE,EAAE;IAChBC,UAAU,EAAE,SAAS;IACrBC,QAAQ,EAAE;EACZ,CAAC;EACD3B,WAAW,EAAE;IACXwB,MAAM,EAAE,gBAAgB;IACxBC,YAAY,EAAE,EAAE;IAChBC,UAAU,EAAE,SAAS;IACrBZ,MAAM,EAAE,GAAG;IACXE,OAAO,EAAE,MAAM;IACfY,UAAU,EAAE;EACd,CAAC;EACDjB,QAAQ,EAAE;IACRY,QAAQ,EAAE,UAAU;IACpBM,GAAG,EAAE,CAAC;IACNC,IAAI,EAAE,CAAC;IACPJ,UAAU,EAAE,SAAS;IACrBK,KAAK,EAAE,MAAM;IACbC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,SAAS;IAClBR,YAAY,EAAE,GAAG;IACjBS,UAAU,EAAE,GAAG;IACfC,aAAa,EAAE,GAAG;IAClBC,MAAM,EAAE;EACV,CAAC;EACDnC,aAAa,EAAE;IACboC,MAAM,EAAE,CAAC;IACTX,UAAU,EAAE,SAAS;IACrBK,KAAK,EAAE,MAAM;IACbC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,SAAS;IAClBR,YAAY,EAAE,GAAG;IACjBS,UAAU,EAAE,GAAG;IACfC,aAAa,EAAE;EACjB,CAAC;EACDlB,IAAI,EAAE;IAAEgB,OAAO,EAAE;EAAiB,CAAC;EACnCf,WAAW,EAAE;IAAEgB,UAAU,EAAE,GAAG;IAAEH,KAAK,EAAE,SAAS;IAAEO,YAAY,EAAE,CAAC;IAAEC,aAAa,EAAE;EAAa,CAAC;EAChGpB,SAAS,EAAE;IAAEa,QAAQ,EAAE,EAAE;IAAED,KAAK,EAAE;EAAU;AAC9C,CAAC;AAAC,IAAAX,EAAA;AAAAoB,YAAA,CAAApB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}