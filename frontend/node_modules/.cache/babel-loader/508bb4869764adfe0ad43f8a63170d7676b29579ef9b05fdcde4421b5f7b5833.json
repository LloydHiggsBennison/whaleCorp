{"ast":null,"code":"// En AdminPanel.jsx\nconst updateCard = (cardId, character) => {\n  const updatedCards = cards.map(card => {\n    if (card.id === cardId) {\n      // Verificar que no exceda 8 personajes\n      if (card.characters.length >= 8) {\n        alert(\"No se pueden agregar más de 8 personajes a una tarjeta\");\n        return card;\n      }\n\n      // Verificar que el personaje no esté ya agregado\n      if (card.characters.some(c => c.name === character.name && c.userEmail === character.userEmail)) {\n        alert(\"Este personaje ya está en la tarjeta\");\n        return card;\n      }\n      return {\n        ...card,\n        characters: [...card.characters, character]\n      };\n    }\n    return card;\n  });\n  onSaveCards(updatedCards);\n};\nconst removeCharacterFromCard = (cardId, characterIndex) => {\n  const updatedCards = cards.map(card => {\n    if (card.id === cardId) {\n      return {\n        ...card,\n        characters: card.characters.filter((_, i) => i !== characterIndex)\n      };\n    }\n    return card;\n  });\n  onSaveCards(updatedCards);\n};","map":{"version":3,"names":["updateCard","cardId","character","updatedCards","cards","map","card","id","characters","length","alert","some","c","name","userEmail","onSaveCards","removeCharacterFromCard","characterIndex","filter","_","i"],"sources":["E:/Visual Studio Code/WhaleCorpProject/frontend/src/components/AdminPanel.jsx"],"sourcesContent":["// En AdminPanel.jsx\r\nconst updateCard = (cardId, character) => {\r\n  const updatedCards = cards.map(card => {\r\n    if (card.id === cardId) {\r\n      // Verificar que no exceda 8 personajes\r\n      if (card.characters.length >= 8) {\r\n        alert(\"No se pueden agregar más de 8 personajes a una tarjeta\");\r\n        return card;\r\n      }\r\n      \r\n      // Verificar que el personaje no esté ya agregado\r\n      if (card.characters.some(c => c.name === character.name && c.userEmail === character.userEmail)) {\r\n        alert(\"Este personaje ya está en la tarjeta\");\r\n        return card;\r\n      }\r\n      \r\n      return {\r\n        ...card,\r\n        characters: [...card.characters, character]\r\n      };\r\n    }\r\n    return card;\r\n  });\r\n  \r\n  onSaveCards(updatedCards);\r\n};\r\n\r\nconst removeCharacterFromCard = (cardId, characterIndex) => {\r\n  const updatedCards = cards.map(card => {\r\n    if (card.id === cardId) {\r\n      return {\r\n        ...card,\r\n        characters: card.characters.filter((_, i) => i !== characterIndex)\r\n      };\r\n    }\r\n    return card;\r\n  });\r\n  \r\n  onSaveCards(updatedCards);\r\n};"],"mappings":"AAAA;AACA,MAAMA,UAAU,GAAGA,CAACC,MAAM,EAAEC,SAAS,KAAK;EACxC,MAAMC,YAAY,GAAGC,KAAK,CAACC,GAAG,CAACC,IAAI,IAAI;IACrC,IAAIA,IAAI,CAACC,EAAE,KAAKN,MAAM,EAAE;MACtB;MACA,IAAIK,IAAI,CAACE,UAAU,CAACC,MAAM,IAAI,CAAC,EAAE;QAC/BC,KAAK,CAAC,wDAAwD,CAAC;QAC/D,OAAOJ,IAAI;MACb;;MAEA;MACA,IAAIA,IAAI,CAACE,UAAU,CAACG,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKX,SAAS,CAACW,IAAI,IAAID,CAAC,CAACE,SAAS,KAAKZ,SAAS,CAACY,SAAS,CAAC,EAAE;QAC/FJ,KAAK,CAAC,sCAAsC,CAAC;QAC7C,OAAOJ,IAAI;MACb;MAEA,OAAO;QACL,GAAGA,IAAI;QACPE,UAAU,EAAE,CAAC,GAAGF,IAAI,CAACE,UAAU,EAAEN,SAAS;MAC5C,CAAC;IACH;IACA,OAAOI,IAAI;EACb,CAAC,CAAC;EAEFS,WAAW,CAACZ,YAAY,CAAC;AAC3B,CAAC;AAED,MAAMa,uBAAuB,GAAGA,CAACf,MAAM,EAAEgB,cAAc,KAAK;EAC1D,MAAMd,YAAY,GAAGC,KAAK,CAACC,GAAG,CAACC,IAAI,IAAI;IACrC,IAAIA,IAAI,CAACC,EAAE,KAAKN,MAAM,EAAE;MACtB,OAAO;QACL,GAAGK,IAAI;QACPE,UAAU,EAAEF,IAAI,CAACE,UAAU,CAACU,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKH,cAAc;MACnE,CAAC;IACH;IACA,OAAOX,IAAI;EACb,CAAC,CAAC;EAEFS,WAAW,CAACZ,YAAY,CAAC;AAC3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}