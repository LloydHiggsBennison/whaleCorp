{"ast":null,"code":"var _jsxFileName = \"E:\\\\Visual Studio Code\\\\WhaleCorpProject\\\\frontend\\\\src\\\\components\\\\AdminPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from \"react\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MySwal = withReactContent(Swal);\n_c = MySwal;\nconst AdminPanel = ({\n  cards,\n  allCharacters,\n  onSaveCards\n}) => {\n  _s();\n  const [newCardTitle, setNewCardTitle] = useState(\"\");\n  const options = useMemo(() => allCharacters.map(char => ({\n    value: char.name,\n    label: char.name\n  })), [allCharacters]);\n  const addNewCard = async () => {\n    if (!newCardTitle.trim()) return;\n\n    // Mostrar SweetAlert con Select múltiple\n    const {\n      value: selectedCharacters\n    } = await MySwal.fire({\n      title: \"Selecciona personajes (máx 8)\",\n      html: /*#__PURE__*/_jsxDEV(Select, {\n        options: options,\n        isMulti: true,\n        name: \"characters\",\n        className: \"basic-multi-select\",\n        classNamePrefix: \"select\",\n        placeholder: \"Busca y selecciona personajes...\",\n        closeMenuOnSelect: false,\n        maxMenuHeight: 200,\n        defaultValue: []\n        // Nota: SweetAlert no maneja muy bien el estado interno, por eso usamos custom components.\n        // Veremos manejo de estado aquí abajo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this),\n      showCancelButton: true,\n      preConfirm: () => {\n        // Se obtiene el select del DOM y lee la selección (workaround)\n        const select = document.querySelector(\".basic-multi-select\");\n        if (select) {\n          const selectedOptions = Array.from(document.querySelectorAll(\".select__multi-value__label\")).map(el => el.textContent);\n          return selectedOptions;\n        }\n        return [];\n      },\n      didOpen: () => {\n        // Aquí puede inicializar react-select con estado, pero para simplicidad omitimos\n      }\n    });\n    if (selectedCharacters && selectedCharacters.length > 8) {\n      Swal.fire(\"Error\", \"Solo puedes seleccionar máximo 8 personajes\", \"error\");\n      return;\n    }\n    if (selectedCharacters) {\n      // Crear array de personajes para la tarjeta\n      const characters = allCharacters.filter(char => selectedCharacters.includes(char.name));\n      const newCard = {\n        id: Date.now(),\n        title: newCardTitle.trim(),\n        characters,\n        date: \"\",\n        time: \"\"\n      };\n      onSaveCards([...cards, newCard]);\n      setNewCardTitle(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      maxWidth: 1200,\n      margin: \"0 auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Panel de Administraci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 20,\n        display: \"flex\",\n        gap: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"T\\xEDtulo para nueva tarjeta\",\n        value: newCardTitle,\n        onChange: e => setNewCardTitle(e.target.value),\n        style: {\n          flex: 1,\n          padding: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewCard,\n        style: {\n          padding: \"10px 20px\",\n          cursor: \"pointer\"\n        },\n        children: \"Crear Tarjeta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPanel, \"V5Lt5jGeARVUeiMfiKeA7i7P2GM=\");\n_c2 = AdminPanel;\nexport default AdminPanel;\nvar _c, _c2;\n$RefreshReg$(_c, \"MySwal\");\n$RefreshReg$(_c2, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useMemo","Swal","withReactContent","Select","jsxDEV","_jsxDEV","MySwal","_c","AdminPanel","cards","allCharacters","onSaveCards","_s","newCardTitle","setNewCardTitle","options","map","char","value","name","label","addNewCard","trim","selectedCharacters","fire","title","html","isMulti","className","classNamePrefix","placeholder","closeMenuOnSelect","maxMenuHeight","defaultValue","fileName","_jsxFileName","lineNumber","columnNumber","showCancelButton","preConfirm","select","document","querySelector","selectedOptions","Array","from","querySelectorAll","el","textContent","didOpen","length","characters","filter","includes","newCard","id","Date","now","date","time","style","padding","maxWidth","margin","children","marginBottom","display","gap","type","onChange","e","target","flex","onClick","cursor","_c2","$RefreshReg$"],"sources":["E:/Visual Studio Code/WhaleCorpProject/frontend/src/components/AdminPanel.jsx"],"sourcesContent":["import React, { useState, useMemo } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Select from \"react-select\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst AdminPanel = ({ cards, allCharacters, onSaveCards }) => {\r\n  const [newCardTitle, setNewCardTitle] = useState(\"\");\r\n\r\n  const options = useMemo(() => \r\n    allCharacters.map((char) => ({ value: char.name, label: char.name }))\r\n  , [allCharacters]);\r\n\r\n  const addNewCard = async () => {\r\n    if (!newCardTitle.trim()) return;\r\n\r\n    // Mostrar SweetAlert con Select múltiple\r\n    const { value: selectedCharacters } = await MySwal.fire({\r\n      title: \"Selecciona personajes (máx 8)\",\r\n      html: (\r\n        <Select\r\n          options={options}\r\n          isMulti\r\n          name=\"characters\"\r\n          className=\"basic-multi-select\"\r\n          classNamePrefix=\"select\"\r\n          placeholder=\"Busca y selecciona personajes...\"\r\n          closeMenuOnSelect={false}\r\n          maxMenuHeight={200}\r\n          defaultValue={[]}\r\n          // Nota: SweetAlert no maneja muy bien el estado interno, por eso usamos custom components.\r\n          // Veremos manejo de estado aquí abajo\r\n        />\r\n      ),\r\n      showCancelButton: true,\r\n      preConfirm: () => {\r\n        // Se obtiene el select del DOM y lee la selección (workaround)\r\n        const select = document.querySelector(\".basic-multi-select\");\r\n        if (select) {\r\n          const selectedOptions = Array.from(\r\n            document.querySelectorAll(\".select__multi-value__label\")\r\n          ).map((el) => el.textContent);\r\n          return selectedOptions;\r\n        }\r\n        return [];\r\n      },\r\n      didOpen: () => {\r\n        // Aquí puede inicializar react-select con estado, pero para simplicidad omitimos\r\n      }\r\n    });\r\n\r\n    if (selectedCharacters && selectedCharacters.length > 8) {\r\n      Swal.fire(\"Error\", \"Solo puedes seleccionar máximo 8 personajes\", \"error\");\r\n      return;\r\n    }\r\n\r\n    if (selectedCharacters) {\r\n      // Crear array de personajes para la tarjeta\r\n      const characters = allCharacters.filter((char) =>\r\n        selectedCharacters.includes(char.name)\r\n      );\r\n\r\n      const newCard = {\r\n        id: Date.now(),\r\n        title: newCardTitle.trim(),\r\n        characters,\r\n        date: \"\",\r\n        time: \"\",\r\n      };\r\n\r\n      onSaveCards([...cards, newCard]);\r\n      setNewCardTitle(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20, maxWidth: 1200, margin: \"0 auto\" }}>\r\n      <h1>Panel de Administración</h1>\r\n\r\n      <div style={{ marginBottom: 20, display: \"flex\", gap: 10 }}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Título para nueva tarjeta\"\r\n          value={newCardTitle}\r\n          onChange={(e) => setNewCardTitle(e.target.value)}\r\n          style={{ flex: 1, padding: 10 }}\r\n        />\r\n        <button onClick={addNewCard} style={{ padding: \"10px 20px\", cursor: \"pointer\" }}>\r\n          Crear Tarjeta\r\n        </button>\r\n      </div>\r\n\r\n      {/* Aquí renderizas las tarjetas con personajes ya agregados */}\r\n      {/* ... Tu código para mostrar tarjetas ... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}