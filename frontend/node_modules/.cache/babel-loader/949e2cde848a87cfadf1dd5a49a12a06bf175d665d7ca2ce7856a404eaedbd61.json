{"ast":null,"code":"var _jsxFileName = \"E:\\\\Visual Studio Code\\\\WhaleCorpProject\\\\frontend\\\\src\\\\components\\\\HomePage.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/components/HomePage.jsx\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport AdminPanel from \"./AdminPanel\";\nimport CardSlot from \"./CardSlot\";\nimport UserProfile from \"./UserProfile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LS_KEYS = {\n  USER_DATA: \"whale_user_data\",\n  CARDS: \"whale_cards\"\n};\n\n// Para mantener el mismo criterio de orden que en AdminPanel/CardSlot\nconst SPECIAL_TAIL = new Set([\"Bard\", \"Paladin\", \"Artist\", \"Valkyrie\"]);\nconst sortTeam = arr => {\n  const withIndex = (arr || []).map((c, i) => ({\n    c,\n    i\n  }));\n  withIndex.sort((a, b) => {\n    var _a$c, _a$c$class, _b$c, _b$c$class;\n    const aIsTail = SPECIAL_TAIL.has((_a$c = a.c) === null || _a$c === void 0 ? void 0 : (_a$c$class = _a$c.class) === null || _a$c$class === void 0 ? void 0 : _a$c$class.name);\n    const bIsTail = SPECIAL_TAIL.has((_b$c = b.c) === null || _b$c === void 0 ? void 0 : (_b$c$class = _b$c.class) === null || _b$c$class === void 0 ? void 0 : _b$c$class.name);\n    if (aIsTail !== bIsTail) return aIsTail ? 1 : -1;\n    return a.i - b.i;\n  });\n  return withIndex.map(x => x.c);\n};\nexport default function HomePage() {\n  _s();\n  // Si tienes el email del usuario desde auth, pásalo aquí:\n  const [userEmail] = useState(\"usuario@ejemplo.com\");\n\n  // userData: { characters: [], labels: [] }\n  const [userData, setUserData] = useState({\n    characters: [],\n    labels: []\n  });\n\n  // cards: [{ id, title, date, time, team1, team2, characters }]\n  const [cards, setCards] = useState([]);\n\n  // Carga inicial desde localStorage\n  useEffect(() => {\n    try {\n      const savedUser = localStorage.getItem(LS_KEYS.USER_DATA);\n      if (savedUser) {\n        setUserData(JSON.parse(savedUser));\n      }\n    } catch (e) {\n      console.warn(\"No se pudo leer userData de localStorage\", e);\n    }\n    try {\n      const savedCards = localStorage.getItem(LS_KEYS.CARDS);\n      if (savedCards) {\n        setCards(JSON.parse(savedCards));\n      }\n    } catch (e) {\n      console.warn(\"No se pudo leer cards de localStorage\", e);\n    }\n  }, []);\n\n  // Persistencia automática\n  useEffect(() => {\n    try {\n      localStorage.setItem(LS_KEYS.USER_DATA, JSON.stringify(userData));\n    } catch (e) {\n      console.warn(\"No se pudo guardar userData en localStorage\", e);\n    }\n  }, [userData]);\n  useEffect(() => {\n    try {\n      localStorage.setItem(LS_KEYS.CARDS, JSON.stringify(cards));\n    } catch (e) {\n      console.warn(\"No se pudo guardar cards en localStorage\", e);\n    }\n  }, [cards]);\n\n  // Derived\n  const allCharacters = useMemo(() => userData.characters || [], [userData]);\n\n  // ---- Handlers para tarjetas ----\n  const onSaveCards = nextCards => {\n    // Asegurar estructura mínima y compatibilidad characters = team1 + team2\n    const normalized = (nextCards || []).map(card => {\n      var _card$id, _card$title, _card$date, _card$time;\n      const team1 = Array.isArray(card.team1) ? sortTeam(card.team1).slice(0, 4) : [];\n      const team2 = Array.isArray(card.team2) ? sortTeam(card.team2).slice(0, 4) : [];\n      const characters = [...team1, ...team2];\n      return {\n        id: (_card$id = card.id) !== null && _card$id !== void 0 ? _card$id : Date.now(),\n        title: (_card$title = card.title) !== null && _card$title !== void 0 ? _card$title : \"Sin título\",\n        date: (_card$date = card.date) !== null && _card$date !== void 0 ? _card$date : \"\",\n        time: (_card$time = card.time) !== null && _card$time !== void 0 ? _card$time : \"\",\n        team1,\n        team2,\n        characters\n      };\n    });\n    setCards(normalized);\n  };\n  const onUpdateCardData = (cardId, partial) => {\n    setCards(prev => prev.map(c => {\n      if (c.id !== cardId) return c;\n\n      // Si vienen team1/team2, normalizamos orden y límite, y sincronizamos characters\n      let next = {\n        ...c,\n        ...partial\n      };\n      if (partial.team1 || partial.team2) {\n        var _ref, _partial$team, _ref2, _partial$team2;\n        const t1Raw = (_ref = (_partial$team = partial.team1) !== null && _partial$team !== void 0 ? _partial$team : c.team1) !== null && _ref !== void 0 ? _ref : [];\n        const t2Raw = (_ref2 = (_partial$team2 = partial.team2) !== null && _partial$team2 !== void 0 ? _partial$team2 : c.team2) !== null && _ref2 !== void 0 ? _ref2 : [];\n        const team1 = sortTeam(t1Raw).slice(0, 4);\n        const team2 = sortTeam(t2Raw).slice(0, 4);\n        next.team1 = team1;\n        next.team2 = team2;\n        next.characters = [...team1, ...team2];\n      } else if (Array.isArray(next.characters) && (!next.team1 || !next.team2)) {\n        var _next$team, _next$team2;\n        // Compatibilidad: si actualizan algo y solo existe characters, rellenamos teams por si acaso\n        const team1 = ((_next$team = next.team1) !== null && _next$team !== void 0 ? _next$team : next.characters.slice(0, 4)).slice(0, 4);\n        const team2 = ((_next$team2 = next.team2) !== null && _next$team2 !== void 0 ? _next$team2 : next.characters.slice(4, 8)).slice(0, 4);\n        next.team1 = sortTeam(team1);\n        next.team2 = sortTeam(team2);\n        next.characters = [...next.team1, ...next.team2];\n      }\n      return next;\n    }));\n  };\n  const onDeleteCard = cardId => {\n    setCards(prev => prev.filter(c => c.id !== cardId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      maxWidth: 1200,\n      margin: \"0 auto\",\n      fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n      color: \"#34495e\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(UserProfile, {\n      userEmail: userEmail,\n      userData: userData,\n      setUserData: setUserData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 30\n      },\n      children: /*#__PURE__*/_jsxDEV(AdminPanel, {\n        cards: cards,\n        allCharacters: allCharacters,\n        onSaveCards: onSaveCards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        marginTop: 40\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: 10,\n          color: \"#1e88e5\",\n          fontWeight: 700\n        },\n        children: \"Tablero de tarjetas (edici\\xF3n r\\xE1pida por equipos)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), cards.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"#607d8b\"\n        },\n        children: \"No hay tarjetas creadas. Usa el Panel de Administraci\\xF3n para crear una.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(3, 1fr)\",\n          gap: 24\n        },\n        children: cards.map(card => /*#__PURE__*/_jsxDEV(CardSlot, {\n          card: card,\n          allCharacters: allCharacters,\n          onUpdateCardData: onUpdateCardData,\n          onDeleteCard: onDeleteCard\n        }, card.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"IjR0jxhSrrsxkonOebMbaV7EGiQ=\");\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","AdminPanel","CardSlot","UserProfile","jsxDEV","_jsxDEV","LS_KEYS","USER_DATA","CARDS","SPECIAL_TAIL","Set","sortTeam","arr","withIndex","map","c","i","sort","a","b","_a$c","_a$c$class","_b$c","_b$c$class","aIsTail","has","class","name","bIsTail","x","HomePage","_s","userEmail","userData","setUserData","characters","labels","cards","setCards","savedUser","localStorage","getItem","JSON","parse","e","console","warn","savedCards","setItem","stringify","allCharacters","onSaveCards","nextCards","normalized","card","_card$id","_card$title","_card$date","_card$time","team1","Array","isArray","slice","team2","id","Date","now","title","date","time","onUpdateCardData","cardId","partial","prev","next","_ref","_partial$team","_ref2","_partial$team2","t1Raw","t2Raw","_next$team","_next$team2","onDeleteCard","filter","style","padding","maxWidth","margin","fontFamily","color","children","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","marginBottom","fontWeight","length","display","gridTemplateColumns","gap","_c","$RefreshReg$"],"sources":["E:/Visual Studio Code/WhaleCorpProject/frontend/src/components/HomePage.jsx"],"sourcesContent":["// frontend/src/components/HomePage.jsx\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport AdminPanel from \"./AdminPanel\";\r\nimport CardSlot from \"./CardSlot\";\r\nimport UserProfile from \"./UserProfile\";\r\n\r\nconst LS_KEYS = {\r\n  USER_DATA: \"whale_user_data\",\r\n  CARDS: \"whale_cards\",\r\n};\r\n\r\n// Para mantener el mismo criterio de orden que en AdminPanel/CardSlot\r\nconst SPECIAL_TAIL = new Set([\"Bard\", \"Paladin\", \"Artist\", \"Valkyrie\"]);\r\nconst sortTeam = (arr) => {\r\n  const withIndex = (arr || []).map((c, i) => ({ c, i }));\r\n  withIndex.sort((a, b) => {\r\n    const aIsTail = SPECIAL_TAIL.has(a.c?.class?.name);\r\n    const bIsTail = SPECIAL_TAIL.has(b.c?.class?.name);\r\n    if (aIsTail !== bIsTail) return aIsTail ? 1 : -1;\r\n    return a.i - b.i;\r\n  });\r\n  return withIndex.map((x) => x.c);\r\n};\r\n\r\nexport default function HomePage() {\r\n  // Si tienes el email del usuario desde auth, pásalo aquí:\r\n  const [userEmail] = useState(\"usuario@ejemplo.com\");\r\n\r\n  // userData: { characters: [], labels: [] }\r\n  const [userData, setUserData] = useState({ characters: [], labels: [] });\r\n\r\n  // cards: [{ id, title, date, time, team1, team2, characters }]\r\n  const [cards, setCards] = useState([]);\r\n\r\n  // Carga inicial desde localStorage\r\n  useEffect(() => {\r\n    try {\r\n      const savedUser = localStorage.getItem(LS_KEYS.USER_DATA);\r\n      if (savedUser) {\r\n        setUserData(JSON.parse(savedUser));\r\n      }\r\n    } catch (e) {\r\n      console.warn(\"No se pudo leer userData de localStorage\", e);\r\n    }\r\n\r\n    try {\r\n      const savedCards = localStorage.getItem(LS_KEYS.CARDS);\r\n      if (savedCards) {\r\n        setCards(JSON.parse(savedCards));\r\n      }\r\n    } catch (e) {\r\n      console.warn(\"No se pudo leer cards de localStorage\", e);\r\n    }\r\n  }, []);\r\n\r\n  // Persistencia automática\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem(LS_KEYS.USER_DATA, JSON.stringify(userData));\r\n    } catch (e) {\r\n      console.warn(\"No se pudo guardar userData en localStorage\", e);\r\n    }\r\n  }, [userData]);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem(LS_KEYS.CARDS, JSON.stringify(cards));\r\n    } catch (e) {\r\n      console.warn(\"No se pudo guardar cards en localStorage\", e);\r\n    }\r\n  }, [cards]);\r\n\r\n  // Derived\r\n  const allCharacters = useMemo(() => userData.characters || [], [userData]);\r\n\r\n  // ---- Handlers para tarjetas ----\r\n  const onSaveCards = (nextCards) => {\r\n    // Asegurar estructura mínima y compatibilidad characters = team1 + team2\r\n    const normalized = (nextCards || []).map((card) => {\r\n      const team1 = Array.isArray(card.team1) ? sortTeam(card.team1).slice(0, 4) : [];\r\n      const team2 = Array.isArray(card.team2) ? sortTeam(card.team2).slice(0, 4) : [];\r\n      const characters = [...team1, ...team2];\r\n      return {\r\n        id: card.id ?? Date.now(),\r\n        title: card.title ?? \"Sin título\",\r\n        date: card.date ?? \"\",\r\n        time: card.time ?? \"\",\r\n        team1,\r\n        team2,\r\n        characters,\r\n      };\r\n    });\r\n    setCards(normalized);\r\n  };\r\n\r\n  const onUpdateCardData = (cardId, partial) => {\r\n    setCards((prev) =>\r\n      prev.map((c) => {\r\n        if (c.id !== cardId) return c;\r\n\r\n        // Si vienen team1/team2, normalizamos orden y límite, y sincronizamos characters\r\n        let next = { ...c, ...partial };\r\n\r\n        if (partial.team1 || partial.team2) {\r\n          const t1Raw = partial.team1 ?? c.team1 ?? [];\r\n          const t2Raw = partial.team2 ?? c.team2 ?? [];\r\n          const team1 = sortTeam(t1Raw).slice(0, 4);\r\n          const team2 = sortTeam(t2Raw).slice(0, 4);\r\n          next.team1 = team1;\r\n          next.team2 = team2;\r\n          next.characters = [...team1, ...team2];\r\n        } else if (Array.isArray(next.characters) && (!next.team1 || !next.team2)) {\r\n          // Compatibilidad: si actualizan algo y solo existe characters, rellenamos teams por si acaso\r\n          const team1 = (next.team1 ?? next.characters.slice(0, 4)).slice(0, 4);\r\n          const team2 = (next.team2 ?? next.characters.slice(4, 8)).slice(0, 4);\r\n          next.team1 = sortTeam(team1);\r\n          next.team2 = sortTeam(team2);\r\n          next.characters = [...next.team1, ...next.team2];\r\n        }\r\n\r\n        return next;\r\n      })\r\n    );\r\n  };\r\n\r\n  const onDeleteCard = (cardId) => {\r\n    setCards((prev) => prev.filter((c) => c.id !== cardId));\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: 20,\r\n        maxWidth: 1200,\r\n        margin: \"0 auto\",\r\n        fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\r\n        color: \"#34495e\",\r\n      }}\r\n    >\r\n      {/* Perfil del usuario: crea/edita personajes y etiquetas */}\r\n      <UserProfile userEmail={userEmail} userData={userData} setUserData={setUserData} />\r\n\r\n      {/* Panel de administración: crear/editar tarjetas (modal con team1/team2) */}\r\n      <div style={{ marginTop: 30 }}>\r\n        <AdminPanel cards={cards} allCharacters={allCharacters} onSaveCards={onSaveCards} />\r\n      </div>\r\n\r\n      {/* Tablero editable con CardSlot (2 columnas por tarjeta: team1 | team2) */}\r\n      <section style={{ marginTop: 40 }}>\r\n        <h2 style={{ marginBottom: 10, color: \"#1e88e5\", fontWeight: 700 }}>\r\n          Tablero de tarjetas (edición rápida por equipos)\r\n        </h2>\r\n        {cards.length === 0 ? (\r\n          <p style={{ color: \"#607d8b\" }}>No hay tarjetas creadas. Usa el Panel de Administración para crear una.</p>\r\n        ) : (\r\n          <div\r\n            style={{\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"repeat(3, 1fr)\",\r\n              gap: 24,\r\n            }}\r\n          >\r\n            {cards.map((card) => (\r\n              <CardSlot\r\n                key={card.id}\r\n                card={card}\r\n                allCharacters={allCharacters}\r\n                onUpdateCardData={onUpdateCardData}\r\n                onDeleteCard={onDeleteCard}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}