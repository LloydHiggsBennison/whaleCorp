{"ast":null,"code":"const BACKEND_URL = \"http://localhost:3001/gas/\";\n\n// Obtener todos los datos (usuarios y tarjetas)\nexport async function fetchAppData() {\n  try {\n    const res = await fetch(BACKEND_URL);\n    if (!res.ok) throw new Error(\"Error al cargar datos\");\n    return await res.json();\n  } catch (error) {\n    console.error(\"Fetch error:\", error);\n    return {\n      users: {},\n      cards: []\n    };\n  }\n}\n\n// Guardar usuarios o tarjetas\nexport async function saveData(type, payload) {\n  try {\n    const res = await fetch(BACKEND_URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        type,\n        ...payload\n      })\n    });\n    if (!res.ok) {\n      const errorData = await res.json();\n      throw new Error(errorData.error || \"Error al guardar datos\");\n    }\n    return await res.json();\n  } catch (error) {\n    console.error(\"Save error:\", error);\n    throw error;\n  }\n}","map":{"version":3,"names":["BACKEND_URL","fetchAppData","res","fetch","ok","Error","json","error","console","users","cards","saveData","type","payload","method","headers","body","JSON","stringify","errorData"],"sources":["E:/Visual Studio Code/WhaleCorpProject/frontend/src/api/backendApi.js"],"sourcesContent":["const BACKEND_URL = \"http://localhost:3001/gas/\";\n\n// Obtener todos los datos (usuarios y tarjetas)\nexport async function fetchAppData() {\n  try {\n    const res = await fetch(BACKEND_URL);\n    if (!res.ok) throw new Error(\"Error al cargar datos\");\n    return await res.json();\n  } catch (error) {\n    console.error(\"Fetch error:\", error);\n    return { users: {}, cards: [] };\n  }\n}\n\n// Guardar usuarios o tarjetas\nexport async function saveData(type, payload) {\n  try {\n    const res = await fetch(BACKEND_URL, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ type, ...payload })\n    });\n    \n    if (!res.ok) {\n      const errorData = await res.json();\n      throw new Error(errorData.error || \"Error al guardar datos\");\n    }\n    \n    return await res.json();\n  } catch (error) {\n    console.error(\"Save error:\", error);\n    throw error;\n  }\n}"],"mappings":"AAAA,MAAMA,WAAW,GAAG,4BAA4B;;AAEhD;AACA,OAAO,eAAeC,YAAYA,CAAA,EAAG;EACnC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACH,WAAW,CAAC;IACpC,IAAI,CAACE,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IACrD,OAAO,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,OAAO;MAAEE,KAAK,EAAE,CAAC,CAAC;MAAEC,KAAK,EAAE;IAAG,CAAC;EACjC;AACF;;AAEA;AACA,OAAO,eAAeC,QAAQA,CAACC,IAAI,EAAEC,OAAO,EAAE;EAC5C,IAAI;IACF,MAAMX,GAAG,GAAG,MAAMC,KAAK,CAACH,WAAW,EAAE;MACnCc,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEN,IAAI;QAAE,GAAGC;MAAQ,CAAC;IAC3C,CAAC,CAAC;IAEF,IAAI,CAACX,GAAG,CAACE,EAAE,EAAE;MACX,MAAMe,SAAS,GAAG,MAAMjB,GAAG,CAACI,IAAI,CAAC,CAAC;MAClC,MAAM,IAAID,KAAK,CAACc,SAAS,CAACZ,KAAK,IAAI,wBAAwB,CAAC;IAC9D;IAEA,OAAO,MAAML,GAAG,CAACI,IAAI,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;IACnC,MAAMA,KAAK;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}