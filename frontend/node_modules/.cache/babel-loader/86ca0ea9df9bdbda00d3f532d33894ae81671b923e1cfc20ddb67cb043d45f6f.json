{"ast":null,"code":"import _objectSpread from\"E:/Visual Studio Code/WhaleCorpProject/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef}from\"react\";import{BrowserRouter,Routes,Route,Navigate}from\"react-router-dom\";import{fetchAppData,saveUserData,saveCards}from\"./api/backendApi\";import LoginForm from\"./components/LoginForm\";import UserProfile from\"./components/UserProfile\";import Header from\"./components/Header\";import HomePage from\"./components/HomePage\";import AdminPanel from\"./components/AdminPanel\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[userEmail,setUserEmail]=useState(null);const[userData,setUserData]=useState(null);const[appData,setAppData]=useState({users:{},cards:[],allCharacters:[]});const[loading,setLoading]=useState(true);const[loginMode,setLoginMode]=useState(\"login\");// puede ser \"login\", \"register\" o \"createPassword\"\nconst isLoggingOut=useRef(false);useEffect(()=>{const loadData=async()=>{try{const data=await fetchAppData();setAppData({users:data.users||{},cards:data.cards||[],allCharacters:getAllCharacters(data.users)});}catch(err){console.error(\"Error loading data:\",err);}finally{setLoading(false);}};loadData();},[]);useEffect(()=>{if(isLoggingOut.current)return;if(userEmail&&userData){const saveTimeout=setTimeout(()=>{saveUserData(userEmail,userData).then(()=>{setAppData(prev=>_objectSpread(_objectSpread({},prev),{},{users:_objectSpread(_objectSpread({},prev.users),{},{[userEmail]:userData}),allCharacters:getAllCharacters(_objectSpread(_objectSpread({},prev.users),{},{[userEmail]:userData}))}));}).catch(error=>{console.error(\"Save user error:\",error);alert(\"Error al guardar los datos. Intente nuevamente.\");});},500);return()=>clearTimeout(saveTimeout);}},[userData,userEmail]);const getAllCharacters=users=>{const characters=[];Object.entries(users).forEach(_ref=>{let[email,userData]=_ref;if(userData.characters){userData.characters.forEach(char=>{characters.push(_objectSpread(_objectSpread({},char),{},{userEmail:email}));});}});return characters;};const saveCardsHandler=async cards=>{try{await saveCards(cards);setAppData(prev=>_objectSpread(_objectSpread({},prev),{},{cards}));}catch(error){console.error(\"Save cards error:\",error);alert(\"Error al guardar las tarjetas. Intente nuevamente.\");}};const handleLogin=async(email,password,mode)=>{const trimmedEmail=email.trim().toLowerCase();const existingUser=appData.users[trimmedEmail];if(mode===\"register\"){if(existingUser)throw new Error(\"Usuario ya registrado\");const newUser={password,characters:[],labels:[],role:\"user\"};setUserEmail(trimmedEmail);setUserData(newUser);setLoginMode(\"login\");return newUser;}if(mode===\"createPassword\"){if(!existingUser)throw new Error(\"Usuario no encontrado\");if(existingUser.password&&existingUser.password!==\"\"){throw new Error(\"La contraseña ya fue creada\");}// Asumimos que backend actualizó la contraseña correctamente\nsetUserEmail(trimmedEmail);setUserData(_objectSpread(_objectSpread({},existingUser),{},{password}));setLoginMode(\"login\");return existingUser;}// login normal\nif(!existingUser)throw new Error(\"Usuario no encontrado\");if(existingUser.role===\"admin\"&&(!existingUser.password||existingUser.password===\"\")){// Indicar al frontend que debe crear contraseña\nthrow new Error(\"Debe crear contraseña para su usuario\");}if(existingUser.password!==password){throw new Error(\"Credenciales inválidas\");}setUserEmail(trimmedEmail);setUserData(_objectSpread(_objectSpread({},existingUser),{},{role:existingUser.role||\"user\"}));setLoginMode(\"login\");return existingUser;};const handleLogout=()=>{isLoggingOut.current=true;if(userEmail&&userData){saveUserData(userEmail,userData).catch(error=>{console.error(\"Final save error:\",error);});}setUserEmail(null);setUserData(null);setLoginMode(\"login\");setTimeout(()=>{isLoggingOut.current=false;},1000);};const userRole=(userData===null||userData===void 0?void 0:userData.role)||\"user\";return/*#__PURE__*/_jsxs(BrowserRouter,{children:[/*#__PURE__*/_jsx(Header,{userEmail:userEmail,onLogout:handleLogout}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(HomePage,{cards:appData.cards,loading:loading})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:userEmail?/*#__PURE__*/_jsx(Navigate,{to:userRole===\"admin\"?\"/admin\":\"/profile\"}):/*#__PURE__*/_jsx(LoginForm,{onLogin:handleLogin,mode:loginMode})}),/*#__PURE__*/_jsx(Route,{path:\"/profile\",element:userEmail&&userRole===\"user\"?/*#__PURE__*/_jsx(UserProfile,{userEmail:userEmail,userData:userData,setUserData:setUserData}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})}),/*#__PURE__*/_jsx(Route,{path:\"/admin\",element:userEmail&&userRole===\"admin\"?/*#__PURE__*/_jsx(AdminPanel,{cards:appData.cards,allCharacters:appData.allCharacters,onSaveCards:saveCardsHandler}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","BrowserRouter","Routes","Route","Navigate","fetchAppData","saveUserData","saveCards","LoginForm","UserProfile","Header","HomePage","AdminPanel","jsx","_jsx","jsxs","_jsxs","App","userEmail","setUserEmail","userData","setUserData","appData","setAppData","users","cards","allCharacters","loading","setLoading","loginMode","setLoginMode","isLoggingOut","loadData","data","getAllCharacters","err","console","error","current","saveTimeout","setTimeout","then","prev","_objectSpread","catch","alert","clearTimeout","characters","Object","entries","forEach","_ref","email","char","push","saveCardsHandler","handleLogin","password","mode","trimmedEmail","trim","toLowerCase","existingUser","Error","newUser","labels","role","handleLogout","userRole","children","onLogout","path","element","to","onLogin","onSaveCards"],"sources":["E:/Visual Studio Code/WhaleCorpProject/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { BrowserRouter, Routes, Route, Navigate } from \"react-router-dom\";\nimport { fetchAppData, saveUserData, saveCards } from \"./api/backendApi\";\nimport LoginForm from \"./components/LoginForm\";\nimport UserProfile from \"./components/UserProfile\";\nimport Header from \"./components/Header\";\nimport HomePage from \"./components/HomePage\";\nimport AdminPanel from \"./components/AdminPanel\";\n\nfunction App() {\n  const [userEmail, setUserEmail] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [appData, setAppData] = useState({\n    users: {},\n    cards: [],\n    allCharacters: [],\n  });\n  const [loading, setLoading] = useState(true);\n  const [loginMode, setLoginMode] = useState(\"login\"); // puede ser \"login\", \"register\" o \"createPassword\"\n  const isLoggingOut = useRef(false);\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const data = await fetchAppData();\n        setAppData({\n          users: data.users || {},\n          cards: data.cards || [],\n          allCharacters: getAllCharacters(data.users),\n        });\n      } catch (err) {\n        console.error(\"Error loading data:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    if (isLoggingOut.current) return;\n    if (userEmail && userData) {\n      const saveTimeout = setTimeout(() => {\n        saveUserData(userEmail, userData)\n          .then(() => {\n            setAppData((prev) => ({\n              ...prev,\n              users: {\n                ...prev.users,\n                [userEmail]: userData,\n              },\n              allCharacters: getAllCharacters({\n                ...prev.users,\n                [userEmail]: userData,\n              }),\n            }));\n          })\n          .catch((error) => {\n            console.error(\"Save user error:\", error);\n            alert(\"Error al guardar los datos. Intente nuevamente.\");\n          });\n      }, 500);\n\n      return () => clearTimeout(saveTimeout);\n    }\n  }, [userData, userEmail]);\n\n  const getAllCharacters = (users) => {\n    const characters = [];\n    Object.entries(users).forEach(([email, userData]) => {\n      if (userData.characters) {\n        userData.characters.forEach((char) => {\n          characters.push({\n            ...char,\n            userEmail: email,\n          });\n        });\n      }\n    });\n    return characters;\n  };\n\n  const saveCardsHandler = async (cards) => {\n    try {\n      await saveCards(cards);\n      setAppData((prev) => ({ ...prev, cards }));\n    } catch (error) {\n      console.error(\"Save cards error:\", error);\n      alert(\"Error al guardar las tarjetas. Intente nuevamente.\");\n    }\n  };\n\n  const handleLogin = async (email, password, mode) => {\n    const trimmedEmail = email.trim().toLowerCase();\n    const existingUser = appData.users[trimmedEmail];\n\n    if (mode === \"register\") {\n      if (existingUser) throw new Error(\"Usuario ya registrado\");\n\n      const newUser = {\n        password,\n        characters: [],\n        labels: [],\n        role: \"user\",\n      };\n\n      setUserEmail(trimmedEmail);\n      setUserData(newUser);\n      setLoginMode(\"login\");\n      return newUser;\n    }\n\n    if (mode === \"createPassword\") {\n      if (!existingUser) throw new Error(\"Usuario no encontrado\");\n      if (existingUser.password && existingUser.password !== \"\") {\n        throw new Error(\"La contraseña ya fue creada\");\n      }\n      // Asumimos que backend actualizó la contraseña correctamente\n      setUserEmail(trimmedEmail);\n      setUserData({ ...existingUser, password });\n      setLoginMode(\"login\");\n      return existingUser;\n    }\n\n    // login normal\n    if (!existingUser) throw new Error(\"Usuario no encontrado\");\n\n    if (existingUser.role === \"admin\" && (!existingUser.password || existingUser.password === \"\")) {\n      // Indicar al frontend que debe crear contraseña\n      throw new Error(\"Debe crear contraseña para su usuario\");\n    }\n\n    if (existingUser.password !== password) {\n      throw new Error(\"Credenciales inválidas\");\n    }\n\n    setUserEmail(trimmedEmail);\n    setUserData({\n      ...existingUser,\n      role: existingUser.role || \"user\",\n    });\n    setLoginMode(\"login\");\n    return existingUser;\n  };\n\n  const handleLogout = () => {\n    isLoggingOut.current = true;\n\n    if (userEmail && userData) {\n      saveUserData(userEmail, userData).catch((error) => {\n        console.error(\"Final save error:\", error);\n      });\n    }\n\n    setUserEmail(null);\n    setUserData(null);\n    setLoginMode(\"login\");\n\n    setTimeout(() => {\n      isLoggingOut.current = false;\n    }, 1000);\n  };\n\n  const userRole = userData?.role || \"user\";\n\n  return (\n    <BrowserRouter>\n      <Header userEmail={userEmail} onLogout={handleLogout} />\n      <Routes>\n        <Route path=\"/\" element={<HomePage cards={appData.cards} loading={loading} />} />\n        <Route\n          path=\"/login\"\n          element={\n            userEmail ? (\n              <Navigate to={userRole === \"admin\" ? \"/admin\" : \"/profile\"} />\n            ) : (\n              <LoginForm onLogin={handleLogin} mode={loginMode} />\n            )\n          }\n        />\n        <Route\n          path=\"/profile\"\n          element={\n            userEmail && userRole === \"user\" ? (\n              <UserProfile userEmail={userEmail} userData={userData} setUserData={setUserData} />\n            ) : (\n              <Navigate to=\"/login\" />\n            )\n          }\n        />\n        <Route\n          path=\"/admin\"\n          element={\n            userEmail && userRole === \"admin\" ? (\n              <AdminPanel\n                cards={appData.cards}\n                allCharacters={appData.allCharacters}\n                onSaveCards={saveCardsHandler}\n              />\n            ) : (\n              <Navigate to=\"/login\" />\n            )\n          }\n        />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}