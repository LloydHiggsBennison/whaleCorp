{"version":3,"file":"static/js/960.d04061d9.chunk.js","mappings":"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","sources":["components/Streamings.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\n\r\n// Canales por defecto (puedes pasarlos por props)\r\nconst CHANNELS = [\r\n  \"https://www.twitch.tv/trickmasteh\",\r\n  \"https://www.twitch.tv/blawbberto\",\r\n  \"https://www.twitch.tv/kaosniight\",\r\n  \"https://www.twitch.tv/khangsoofly\",\r\n  \"https://www.twitch.tv/faaaxy\",\r\n  \"https://www.twitch.tv/takeshijoga\",\r\n];\r\n\r\n/**\r\n * Renderiza SOLO las tarjetas de canales que están LIVE.\r\n * Usa un probe del backend para evitar 404 en el navegador (mejora Best Practices).\r\n * Miniaturas angostas (cardWidth), relación 16:9, lazy + tamaños explícitos.\r\n * Pausa el polling cuando la pestaña está oculta y arranca en idle.\r\n */\r\nexport default function Streamings({\r\n  channels = CHANNELS,\r\n  pollIntervalMs = 120000,\r\n  maxCards = 12,\r\n  cardWidth = 220, // ancho de la tarjeta (angosta)\r\n  probeEndpoint = \"/api/stream/live-status\",\r\n}) {\r\n  const [liveList, setLiveList] = useState([]); // [{channel, thumbUrl, w, h}]\r\n  const [loading, setLoading] = useState(true);\r\n  const timerRef = useRef(null);\r\n\r\n  // Preconnect (mejora TTFB/cold start del CDN)\r\n  useEffect(() => {\r\n    const add = (href) => {\r\n      const link = document.createElement(\"link\");\r\n      link.rel = \"preconnect\";\r\n      link.href = href;\r\n      link.crossOrigin = \"\";\r\n      document.head.appendChild(link);\r\n      return link;\r\n    };\r\n    const a = add(\"https://static-cdn.jtvnw.net\");\r\n    const b = add(\"https://www.twitch.tv\");\r\n    return () => {\r\n      a.remove();\r\n      b.remove();\r\n    };\r\n  }, []);\r\n\r\n  const normalized = useMemo(\r\n    () =>\r\n      (channels || [])\r\n        .map((raw) => {\r\n          if (!raw) return null;\r\n          const s = String(raw).trim();\r\n          try {\r\n            if (s.startsWith(\"http\")) {\r\n              const u = new URL(s);\r\n              const parts = u.pathname.split(\"/\").filter(Boolean);\r\n              return parts[0]?.toLowerCase() || null;\r\n            }\r\n          } catch {}\r\n          return s.replace(/^@/, \"\").replace(/\\s+/g, \"\").toLowerCase();\r\n        })\r\n        .filter(Boolean)\r\n        .slice(0, maxCards),\r\n    [channels, maxCards]\r\n  );\r\n\r\n  const checkLive = async (signal) => {\r\n    if (!normalized.length) {\r\n      setLiveList([]);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    const qs = (ch) => `${probeEndpoint}?channel=${encodeURIComponent(ch)}`;\r\n\r\n    const res = await Promise.allSettled(\r\n      normalized.map((c) => fetch(qs(c), { cache: \"no-store\", signal }))\r\n    );\r\n    const jsons = await Promise.all(\r\n      res.map((r) => (r.status === \"fulfilled\" ? r.value.json().catch(() => null) : null))\r\n    );\r\n\r\n    const lives = (jsons || [])\r\n      .filter((j) => j && j.live)\r\n      .map((j) => ({\r\n        channel: j.channel,\r\n        // 320x180 es suficiente para 220px de ancho → menos bytes\r\n        thumbUrl: `https://static-cdn.jtvnw.net/previews-ttv/live_user_${encodeURIComponent(\r\n          j.channel\r\n        )}-320x180.jpg?cb=${Date.now()}`,\r\n        w: 320,\r\n        h: 180,\r\n      }));\r\n\r\n    setLiveList(lives);\r\n    setLoading(false);\r\n  };\r\n\r\n  // Arranca en idle y pausa en background\r\n  useEffect(() => {\r\n    const ctrl = new AbortController();\r\n\r\n    const start = () => {\r\n      if (document.visibilityState === \"visible\") checkLive(ctrl.signal);\r\n    };\r\n\r\n    // requestIdleCallback para no bloquear el primer render\r\n    const ric = (window.requestIdleCallback ||\r\n      function (cb) {\r\n        return setTimeout(cb, 500);\r\n      })(start);\r\n\r\n    timerRef.current = setInterval(() => {\r\n      if (document.visibilityState === \"visible\") checkLive(ctrl.signal);\r\n    }, pollIntervalMs);\r\n\r\n    const vis = () => document.visibilityState === \"visible\" && checkLive(ctrl.signal);\r\n    document.addEventListener(\"visibilitychange\", vis);\r\n\r\n    return () => {\r\n      (window.cancelIdleCallback ? window.cancelIdleCallback(ric) : clearTimeout(ric));\r\n      clearInterval(timerRef.current);\r\n      document.removeEventListener(\"visibilitychange\", vis);\r\n      ctrl.abort();\r\n    };\r\n  }, [normalized, pollIntervalMs]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const cardHeight = Math.round((cardWidth * 9) / 16);\r\n\r\n  return (\r\n    <div\r\n      aria-label=\"Listado de streamings en vivo\"\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        gap: 12,\r\n        alignItems: \"flex-end\", // pega a la derecha\r\n      }}\r\n    >\r\n      {loading && liveList.length === 0 ? (\r\n        <div style={{ ...styles.skeletonBox, width: cardWidth, height: cardHeight }}>\r\n          <div style={styles.livePillMuted}>Buscando LIVE…</div>\r\n        </div>\r\n      ) : (\r\n        liveList.map((s) => (\r\n          <a\r\n            key={s.channel}\r\n            href={`https://www.twitch.tv/${encodeURIComponent(s.channel)}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <div\r\n              style={{\r\n                ...styles.card,\r\n                width: cardWidth,\r\n                contentVisibility: \"auto\",\r\n                containIntrinsicSize: `${cardHeight + 48}px`,\r\n                marginLeft: \"auto\",\r\n              }}\r\n            >\r\n              <div style={styles.livePill}>LIVE</div>\r\n\r\n              <img\r\n                src={s.thumbUrl}\r\n                srcSet={`${s.thumbUrl} ${s.w}w`}\r\n                sizes={`${cardWidth}px`}\r\n                alt={`${s.channel} en vivo`}\r\n                width={cardWidth}\r\n                height={cardHeight}\r\n                loading=\"lazy\"\r\n                decoding=\"async\"\r\n                fetchpriority=\"low\"\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: cardHeight,\r\n                  objectFit: \"cover\",\r\n                  display: \"block\",\r\n                  background: \"#555\",\r\n                }}\r\n              />\r\n\r\n              <div style={styles.meta}>\r\n                <div style={styles.streamTitle}>{s.channel}</div>\r\n                <div style={styles.streamSub}>Click para abrir en Twitch</div>\r\n              </div>\r\n            </div>\r\n          </a>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  card: {\r\n    position: \"relative\",\r\n    border: \"3px solid #000\",\r\n    borderRadius: 10,\r\n    background: \"#f7f9fc\",\r\n    overflow: \"hidden\",\r\n  },\r\n  skeletonBox: {\r\n    border: \"3px solid #000\",\r\n    borderRadius: 10,\r\n    background: \"#f7f9fc\",\r\n    display: \"flex\",\r\n    alignItems: \"flex-start\",\r\n    marginLeft: \"auto\",\r\n  },\r\n  livePill: {\r\n    position: \"absolute\",\r\n    top: 8,\r\n    left: 8,\r\n    background: \"#ff3b30\",\r\n    color: \"#fff\",\r\n    fontSize: 12,\r\n    padding: \"2px 8px\",\r\n    borderRadius: 999,\r\n    fontWeight: 700,\r\n    letterSpacing: 0.5,\r\n    zIndex: 2,\r\n  },\r\n  livePillMuted: {\r\n    margin: 8,\r\n    background: \"#e0e0e0\",\r\n    color: \"#555\",\r\n    fontSize: 12,\r\n    padding: \"2px 8px\",\r\n    borderRadius: 999,\r\n    fontWeight: 600,\r\n    letterSpacing: 0.5,\r\n  },\r\n  meta: { padding: \"8px 10px 10px\" },\r\n  streamTitle: { fontWeight: 700, color: \"#1e2a38\", marginBottom: 2, textTransform: \"capitalize\", fontSize: 14 },\r\n  streamSub: { fontSize: 11, color: \"#66788a\" },\r\n};\r\n"],"names":["CHANNELS","Streamings","_ref","channels","pollIntervalMs","maxCards","cardWidth","probeEndpoint","liveList","setLiveList","useState","loading","setLoading","timerRef","useRef","useEffect","add","href","link","document","createElement","rel","crossOrigin","head","appendChild","a","b","remove","normalized","useMemo","map","raw","s","String","trim","startsWith","_parts$","u","URL","pathname","split","filter","Boolean","toLowerCase","_unused","replace","slice","checkLive","async","length","res","Promise","allSettled","c","fetch","ch","concat","encodeURIComponent","cache","signal","lives","all","r","status","value","json","catch","j","live","channel","thumbUrl","Date","now","w","h","ctrl","AbortController","ric","window","requestIdleCallback","cb","setTimeout","start","visibilityState","current","setInterval","vis","addEventListener","cancelIdleCallback","clearTimeout","clearInterval","removeEventListener","abort","cardHeight","Math","round","_jsx","style","display","flexDirection","gap","alignItems","children","_objectSpread","styles","skeletonBox","width","height","livePillMuted","target","textDecoration","_jsxs","card","contentVisibility","containIntrinsicSize","marginLeft","livePill","src","srcSet","sizes","alt","decoding","fetchpriority","objectFit","background","meta","streamTitle","streamSub","position","border","borderRadius","overflow","top","left","color","fontSize","padding","fontWeight","letterSpacing","zIndex","margin","marginBottom","textTransform"],"sourceRoot":""}